{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState('// Your code will appear here');\n  const handleVoiceCommand = async transcript => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/parse', {\n        text: transcript\n      });\n      setCode(res.data.code || \"// No code generated.\");\n    } catch (err) {\n      console.error(\"Error calling backend:\", err);\n      setCode(\"// Failed to connect to backend.\");\n    }\n  };\n  const handleSpeak = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      console.log(\"You said:\", transcript);\n      handleVoiceCommand(transcript);\n    };\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFA4 Voice-Controlled Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpeak,\n      children: \"Speak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"400px\",\n      language: \"javascript\",\n      value: code,\n      onChange: value => setCode(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GH1Dccp1P87fucAykGbfJUkxKlo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Editor","axios","jsxDEV","_jsxDEV","App","_s","code","setCode","handleVoiceCommand","transcript","res","post","text","data","err","console","error","handleSpeak","recognition","window","webkitSpeechRecognition","lang","onresult","event","results","log","start","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","language","value","onChange","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\n\nfunction App() {\n  const [code, setCode] = useState('// Your code will appear here');\n\n  const handleVoiceCommand = async (transcript) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/parse', {\n        text: transcript\n      });\n      setCode(res.data.code || \"// No code generated.\");\n    } catch (err) {\n      console.error(\"Error calling backend:\", err);\n      setCode(\"// Failed to connect to backend.\");\n    }\n  };\n\n  const handleSpeak = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      console.log(\"You said:\", transcript);\n      handleVoiceCommand(transcript);\n    };\n    recognition.start();\n  };\n\n  return (\n    <div>\n      <h2>ðŸŽ¤ Voice-Controlled Code Generator</h2>\n      <button onClick={handleSpeak}>Speak</button>\n      <Editor\n        height=\"400px\"\n        language=\"javascript\"\n        value={code}\n        onChange={(value) => setCode(value)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,+BAA+B,CAAC;EAEjE,MAAMS,kBAAkB,GAAG,MAAOC,UAAU,IAAK;IAC/C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,iCAAiC,EAAE;QAC9DC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFF,OAAO,CAACG,GAAG,CAACG,IAAI,CAACP,IAAI,IAAI,uBAAuB,CAAC;IACnD,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5CP,OAAO,CAAC,kCAAkC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,uBAAuB,CAAC,CAAC;IACxDF,WAAW,CAACG,IAAI,GAAG,OAAO;IAC1BH,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMd,UAAU,GAAGc,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACf,UAAU;MACjDM,OAAO,CAACU,GAAG,CAAC,WAAW,EAAEhB,UAAU,CAAC;MACpCD,kBAAkB,CAACC,UAAU,CAAC;IAChC,CAAC;IACDS,WAAW,CAACQ,KAAK,CAAC,CAAC;EACrB,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C5B,OAAA;MAAQ6B,OAAO,EAAEf,WAAY;MAAAU,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C5B,OAAA,CAACH,MAAM;MACLiC,MAAM,EAAC,OAAO;MACdC,QAAQ,EAAC,YAAY;MACrBC,KAAK,EAAE7B,IAAK;MACZ8B,QAAQ,EAAGD,KAAK,IAAK5B,OAAO,CAAC4B,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CAtCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
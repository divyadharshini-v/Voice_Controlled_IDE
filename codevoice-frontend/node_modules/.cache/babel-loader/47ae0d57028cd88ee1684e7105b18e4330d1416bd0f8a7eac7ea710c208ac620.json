{"ast":null,"code":"var _jsxFileName = \"D:\\\\Voice_Controlled_IDE\\\\codevoice-frontend\\\\src\\\\MicInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicInput = ({\n  setGeneratedCode\n}) => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualInput, setManualInput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const audioChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunks.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) audioChunks.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, {\n          type: \"audio/webm\"\n        });\n        const formData = new FormData();\n        formData.append(\"audio\", audioBlob);\n        try {\n          const response = await axios.post(\"http://localhost:5000/api/transcribe\", formData);\n          const text = response.data.transcript;\n          setTranscript(text);\n          sendToBackend(text); // Generate code\n        } catch (err) {\n          console.error(\"Transcription failed:\", err);\n        }\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      alert(\"Microphone access denied or not available\");\n      console.error(\"Mic error:\", err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const sendToBackend = async text => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/generate-code\", {\n        text\n      });\n      setGeneratedCode(response.data.code || \"No code generated.\");\n    } catch (error) {\n      console.error(\"Code generation failed:\", error);\n      setGeneratedCode(\"Failed to generate code.\");\n    }\n  };\n  const handleManualSubmit = () => {\n    if (manualInput.trim()) {\n      setTranscript(manualInput);\n      sendToBackend(manualInput);\n    } else {\n      alert(\"Please enter some prompt text.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 space-y-4 bg-gray-100 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded\",\n        children: \"\\uD83C\\uDFA4 Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"px-4 py-2 bg-red-600 text-white rounded\",\n        children: \"\\u23F9\\uFE0F Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 bg-white border rounded\",\n        children: transcript || \"No transcript yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: \"Or Enter Prompt Manually:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border rounded\",\n        rows: \"3\",\n        value: manualInput,\n        onChange: e => setManualInput(e.target.value),\n        placeholder: \"Type your prompt here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManualSubmit,\n        className: \"mt-2 px-4 py-2 bg-green-600 text-white rounded\",\n        children: \"Submit Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(MicInput, \"vEzUv+eS/ifx+cDspMbdTJSa1DU=\");\n_c = MicInput;\nexport default MicInput;\nvar _c;\n$RefreshReg$(_c, \"MicInput\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","MicInput","setGeneratedCode","_s","transcript","setTranscript","manualInput","setManualInput","mediaRecorderRef","isRecording","setIsRecording","audioChunks","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","response","post","text","sendToBackend","err","console","error","start","alert","stopRecording","stop","code","handleManualSubmit","trim","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/Voice_Controlled_IDE/codevoice-frontend/src/MicInput.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MicInput = ({ setGeneratedCode }) => {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [manualInput, setManualInput] = useState(\"\");\r\n  const mediaRecorderRef = useRef(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const audioChunks = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunks.current = [];\r\n\r\n      mediaRecorderRef.current.ondataavailable = (e) => {\r\n        if (e.data.size > 0) audioChunks.current.push(e.data);\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/webm\" });\r\n        const formData = new FormData();\r\n        formData.append(\"audio\", audioBlob);\r\n\r\n        try {\r\n          const response = await axios.post(\"http://localhost:5000/api/transcribe\", formData);\r\n          const text = response.data.transcript;\r\n          setTranscript(text);\r\n          sendToBackend(text); // Generate code\r\n        } catch (err) {\r\n          console.error(\"Transcription failed:\", err);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      alert(\"Microphone access denied or not available\");\r\n      console.error(\"Mic error:\", err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const sendToBackend = async (text) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/generate-code\", { text });\r\n      setGeneratedCode(response.data.code || \"No code generated.\");\r\n    } catch (error) {\r\n      console.error(\"Code generation failed:\", error);\r\n      setGeneratedCode(\"Failed to generate code.\");\r\n    }\r\n  };\r\n\r\n  const handleManualSubmit = () => {\r\n    if (manualInput.trim()) {\r\n      setTranscript(manualInput);\r\n      sendToBackend(manualInput);\r\n    } else {\r\n      alert(\"Please enter some prompt text.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4 bg-gray-100 rounded-lg shadow-md\">\r\n      <div className=\"space-x-4\">\r\n        {!isRecording ? (\r\n          <button onClick={startRecording} className=\"px-4 py-2 bg-blue-600 text-white rounded\">\r\n            üé§ Start Recording\r\n          </button>\r\n        ) : (\r\n          <button onClick={stopRecording} className=\"px-4 py-2 bg-red-600 text-white rounded\">\r\n            ‚èπÔ∏è Stop Recording\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <p className=\"font-semibold\">Transcript:</p>\r\n        <div className=\"p-2 bg-white border rounded\">{transcript || \"No transcript yet.\"}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <p className=\"font-semibold\">Or Enter Prompt Manually:</p>\r\n        <textarea\r\n          className=\"w-full p-2 border rounded\"\r\n          rows=\"3\"\r\n          value={manualInput}\r\n          onChange={(e) => setManualInput(e.target.value)}\r\n          placeholder=\"Type your prompt here...\"\r\n        />\r\n        <button\r\n          onClick={handleManualSubmit}\r\n          className=\"mt-2 px-4 py-2 bg-green-600 text-white rounded\"\r\n        >\r\n          Submit Prompt\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
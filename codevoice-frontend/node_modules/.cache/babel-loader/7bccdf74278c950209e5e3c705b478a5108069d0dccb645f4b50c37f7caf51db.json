{"ast":null,"code":"var _jsxFileName = \"D:\\\\Voice_Controlled_IDE\\\\codevoice-frontend\\\\src\\\\MicInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MicInput({\n  onCodeGenerated\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    audioChunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = event => {\n      if (event.data.size > 0) {\n        audioChunksRef.current.push(event.data);\n      }\n    };\n    mediaRecorderRef.current.onstop = async () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: 'audio/webm'\n      });\n      const formData = new FormData();\n      formData.append('audio', audioBlob, 'recording.webm');\n      try {\n        const response = await axios.post('http://localhost:5001/api/transcribe', formData);\n        const transcript = response.data.transcript;\n\n        // Send to backend for code generation\n        const genResponse = await axios.post('http://localhost:5000/api/parse', {\n          command: transcript\n        });\n        const code = genResponse.data.code;\n        onCodeGenerated(code); // Pass generated code to parent component\n      } catch (err) {\n        console.error('Transcription or code generation failed:', err);\n      }\n    };\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopRecording : startRecording,\n      className: `px-4 py-2 rounded text-white ${isRecording ? 'bg-red-500' : 'bg-green-600'}`,\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MicInput, \"9vlr/drR7eRRS6Si05gDHrjPA2U=\");\n_c = MicInput;\nexport default MicInput;\nvar _c;\n$RefreshReg$(_c, \"MicInput\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","MicInput","onCodeGenerated","_s","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","response","post","transcript","genResponse","command","code","err","console","error","start","stopRecording","stop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Voice_Controlled_IDE/codevoice-frontend/src/MicInput.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction MicInput({ onCodeGenerated }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    mediaRecorderRef.current = new MediaRecorder(stream);\r\n    audioChunksRef.current = [];\r\n\r\n    mediaRecorderRef.current.ondataavailable = (event) => {\r\n      if (event.data.size > 0) {\r\n        audioChunksRef.current.push(event.data);\r\n      }\r\n    };\r\n\r\n    mediaRecorderRef.current.onstop = async () => {\r\n      const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\r\n      const formData = new FormData();\r\n      formData.append('audio', audioBlob, 'recording.webm');\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:5001/api/transcribe', formData);\r\n        const transcript = response.data.transcript;\r\n\r\n        // Send to backend for code generation\r\n        const genResponse = await axios.post('http://localhost:5000/api/parse', {\r\n          command: transcript,\r\n        });\r\n\r\n        const code = genResponse.data.code;\r\n        onCodeGenerated(code);  // Pass generated code to parent component\r\n\r\n      } catch (err) {\r\n        console.error('Transcription or code generation failed:', err);\r\n      }\r\n    };\r\n\r\n    mediaRecorderRef.current.start();\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center mb-4\">\r\n      <button\r\n        onClick={isRecording ? stopRecording : startRecording}\r\n        className={`px-4 py-2 rounded text-white ${isRecording ? 'bg-red-500' : 'bg-green-600'}`}\r\n      >\r\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MicInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n  const handleStartRecording = () => {\n    // For now this just simulates recording\n    setRecording(true);\n    setTimeout(() => {\n      setTranscript(\"scroll down\"); // example\n      setRecording(false);\n    }, 2000);\n  };\n  const handleGenerateCode = async () => {\n    try {\n      const promptToSend = transcript || manualPrompt;\n      const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: promptToSend\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n      const data = await res.json();\n      setGeneratedCode(data.code || \"// No code generated\");\n    } catch (err) {\n      console.error(err);\n      setGeneratedCode(\"// Error generating code\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6 flex flex-col items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl bg-white rounded-lg shadow p-6 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded shadow\",\n        children: recording ? \"ðŸŽ™ Recording...\" : \"ðŸ“Œ Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-medium mb-1\",\n          children: \"Transcript:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: transcript,\n          onChange: e => setTranscript(e.target.value),\n          className: \"w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-medium mb-1\",\n          children: \"Or Enter Prompt Manually:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manualPrompt,\n          onChange: e => setManualPrompt(e.target.value),\n          placeholder: \"Type your prompt if mic does not work...\",\n          className: \"w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateCode,\n        className: \"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-semibold rounded shadow\",\n        children: \"\\u26A1 Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 border rounded p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800 mb-2\",\n          children: \"\\uD83D\\uDCC4 Generated Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap text-sm text-gray-700\",\n          children: generatedCode || \"Your code will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DbDiFEX2UZHyK+D4PH6PV+s49cg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","generatedCode","setGeneratedCode","recording","setRecording","handleStartRecording","setTimeout","handleGenerateCode","promptToSend","res","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","data","json","code","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","type","placeholder","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n\n  const handleStartRecording = () => {\n    // For now this just simulates recording\n    setRecording(true);\n    setTimeout(() => {\n      setTranscript(\"scroll down\"); // example\n      setRecording(false);\n    }, 2000);\n  };\n\n  const handleGenerateCode = async () => {\n    try {\n      const promptToSend = transcript || manualPrompt;\n\n      const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ prompt: promptToSend }),\n      });\n\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n\n      const data = await res.json();\n      setGeneratedCode(data.code || \"// No code generated\");\n    } catch (err) {\n      console.error(err);\n      setGeneratedCode(\"// Error generating code\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6 flex flex-col items-center\">\n      <div className=\"w-full max-w-3xl bg-white rounded-lg shadow p-6 space-y-4\">\n        {/* Start Recording */}\n        <button\n          onClick={handleStartRecording}\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded shadow\"\n        >\n          {recording ? \"ðŸŽ™ Recording...\" : \"ðŸ“Œ Start Recording\"}\n        </button>\n\n        {/* Transcript */}\n        <div>\n          <label className=\"block text-gray-700 font-medium mb-1\">\n            Transcript:\n          </label>\n          <textarea\n            value={transcript}\n            onChange={(e) => setTranscript(e.target.value)}\n            className=\"w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            rows={2}\n          />\n        </div>\n\n        {/* Manual Prompt */}\n        <div>\n          <label className=\"block text-gray-700 font-medium mb-1\">\n            Or Enter Prompt Manually:\n          </label>\n          <input\n            type=\"text\"\n            value={manualPrompt}\n            onChange={(e) => setManualPrompt(e.target.value)}\n            placeholder=\"Type your prompt if mic does not work...\"\n            className=\"w-full border rounded p-2 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n          />\n        </div>\n\n        {/* Generate Code Button */}\n        <button\n          onClick={handleGenerateCode}\n          className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-semibold rounded shadow\"\n        >\n          âš¡ Generate Code\n        </button>\n\n        {/* Generated Code */}\n        <div className=\"bg-gray-50 border rounded p-4\">\n          <h3 className=\"font-semibold text-gray-800 mb-2\">ðŸ“„ Generated Code:</h3>\n          <pre className=\"whitespace-pre-wrap text-sm text-gray-700\">\n            {generatedCode || \"Your code will appear here.\"}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
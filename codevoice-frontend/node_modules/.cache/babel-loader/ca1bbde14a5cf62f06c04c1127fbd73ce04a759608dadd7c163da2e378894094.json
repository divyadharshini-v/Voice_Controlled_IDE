{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\MicInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicInput = ({\n  setTranscript,\n  transcript,\n  manualPrompt,\n  setManualPrompt,\n  setGeneratedCode\n}) => {\n  _s();\n  const mediaRecorderRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const audioChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunks.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) audioChunks.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, {\n          type: \"audio/webm\"\n        });\n        const formData = new FormData();\n        formData.append(\"audio\", audioBlob);\n        try {\n          const res = await axios.post(\"http://localhost:5000/api/transcribe\", formData);\n          const text = res.data.transcript;\n          setTranscript(text);\n        } catch (err) {\n          console.error(\"Transcription failed:\", err);\n        }\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      alert(\"Microphone access denied or not available\");\n      console.error(\"Mic error:\", err);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl bg-white p-4 rounded shadow mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"\\uD83C\\uDFA4 Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"bg-red-600 text-white px-4 py-2 rounded\",\n        children: \"\\u23F9\\uFE0F Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border rounded\",\n        rows: \"3\",\n        value: transcript,\n        readOnly: true,\n        placeholder: \"Transcript from mic will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: \"Or Enter Prompt Manually:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border rounded\",\n        rows: \"3\",\n        value: manualPrompt,\n        onChange: e => setManualPrompt(e.target.value),\n        placeholder: \"Type your prompt if mic does not work...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MicInput, \"7iY7pSRN7ZtYExB2BBNgIUSwoi0=\");\n_c = MicInput;\nexport default MicInput;\nvar _c;\n$RefreshReg$(_c, \"MicInput\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","MicInput","setTranscript","transcript","manualPrompt","setManualPrompt","setGeneratedCode","_s","mediaRecorderRef","isRecording","setIsRecording","audioChunks","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","res","post","text","err","console","error","start","alert","stopRecording","stop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/MicInput.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MicInput = ({\r\n  setTranscript,\r\n  transcript,\r\n  manualPrompt,\r\n  setManualPrompt,\r\n  setGeneratedCode,\r\n}) => {\r\n  const mediaRecorderRef = useRef(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const audioChunks = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunks.current = [];\r\n\r\n      mediaRecorderRef.current.ondataavailable = (e) => {\r\n        if (e.data.size > 0) audioChunks.current.push(e.data);\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/webm\" });\r\n        const formData = new FormData();\r\n        formData.append(\"audio\", audioBlob);\r\n\r\n        try {\r\n          const res = await axios.post(\"http://localhost:5000/api/transcribe\", formData);\r\n          const text = res.data.transcript;\r\n          setTranscript(text);\r\n        } catch (err) {\r\n          console.error(\"Transcription failed:\", err);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      alert(\"Microphone access denied or not available\");\r\n      console.error(\"Mic error:\", err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-2xl bg-white p-4 rounded shadow mb-6\">\r\n      <div className=\"mb-4\">\r\n        {!isRecording ? (\r\n          <button\r\n            onClick={startRecording}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n            \r\n          >\r\n            üé§ Start Recording\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={stopRecording}\r\n            className=\"bg-red-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            ‚èπÔ∏è Stop Recording\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-medium mb-1\">Transcript:</label>\r\n        <textarea\r\n          className=\"w-full p-2 border rounded\"\r\n          rows=\"3\"\r\n          value={transcript}\r\n          readOnly\r\n          placeholder=\"Transcript from mic will appear here...\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium mb-1\">Or Enter Prompt Manually:</label>\r\n        <textarea\r\n          className=\"w-full p-2 border rounded\"\r\n          rows=\"3\"\r\n          value={manualPrompt}\r\n          onChange={(e) => setManualPrompt(e.target.value)}\r\n          placeholder=\"Type your prompt if mic does not work...\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
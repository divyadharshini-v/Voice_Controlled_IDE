{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceControl = ({\n  setTranscript\n}) => {\n  _s();\n  const recognitionRef = useRef(null);\n  const [isActivated, setIsActivated] = useState(false);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognitionRef.current = recognition;\n\n    // Step 1: Passive listener - only listens for the wake word\n    const passiveRecognition = new SpeechRecognition();\n    passiveRecognition.continuous = true;\n    passiveRecognition.lang = \"en-US\";\n    passiveRecognition.interimResults = false;\n    passiveRecognition.onresult = event => {\n      const speech = event.results[event.results.length - 1][0].transcript.trim().toLowerCase();\n      console.log(\"Passive heard:\", speech);\n      if (speech.includes(\"start recording\") && !isActivated) {\n        setIsActivated(true);\n        passiveRecognition.stop();\n        recognition.start();\n        console.log(\"ðŸŽ¤ Microphone activated by voice command.\");\n      }\n    };\n    passiveRecognition.onerror = e => {\n      console.error(\"Passive recognition error:\", e);\n    };\n\n    // Start passive listening\n    passiveRecognition.start();\n\n    // Step 2: Active listener - for capturing actual user prompt\n    recognition.onresult = event => {\n      const speech = event.results[event.results.length - 1][0].transcript.trim();\n      console.log(\"User said:\", speech);\n      setTranscript(speech);\n      recognition.stop(); // stop after capturing one command\n    };\n    recognition.onerror = event => {\n      console.error(\"Recognition error:\", event.error);\n    };\n    return () => {\n      passiveRecognition.stop();\n      recognition.stop();\n    };\n  }, [isActivated, setTranscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700\",\n      children: [\"\\uD83C\\uDFA4 Say \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\\"start recording\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), \" to begin.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"EejNgzZ2++Cy0tIgu2HzZyVjHUE=\");\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VoiceControl","setTranscript","_s","recognitionRef","isActivated","setIsActivated","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","continuous","lang","interimResults","current","passiveRecognition","onresult","event","speech","results","length","transcript","trim","toLowerCase","console","log","includes","stop","start","onerror","e","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst VoiceControl = ({ setTranscript }) => {\r\n  const recognitionRef = useRef(null);\r\n  const [isActivated, setIsActivated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech Recognition not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n\r\n    recognitionRef.current = recognition;\r\n\r\n    // Step 1: Passive listener - only listens for the wake word\r\n    const passiveRecognition = new SpeechRecognition();\r\n    passiveRecognition.continuous = true;\r\n    passiveRecognition.lang = \"en-US\";\r\n    passiveRecognition.interimResults = false;\r\n\r\n    passiveRecognition.onresult = (event) => {\r\n      const speech = event.results[event.results.length - 1][0].transcript.trim().toLowerCase();\r\n      console.log(\"Passive heard:\", speech);\r\n\r\n      if (speech.includes(\"start recording\") && !isActivated) {\r\n        setIsActivated(true);\r\n        passiveRecognition.stop();\r\n        recognition.start();\r\n        console.log(\"ðŸŽ¤ Microphone activated by voice command.\");\r\n      }\r\n    };\r\n\r\n    passiveRecognition.onerror = (e) => {\r\n      console.error(\"Passive recognition error:\", e);\r\n    };\r\n\r\n    // Start passive listening\r\n    passiveRecognition.start();\r\n\r\n    // Step 2: Active listener - for capturing actual user prompt\r\n    recognition.onresult = (event) => {\r\n      const speech = event.results[event.results.length - 1][0].transcript.trim();\r\n      console.log(\"User said:\", speech);\r\n      setTranscript(speech);\r\n      recognition.stop(); // stop after capturing one command\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Recognition error:\", event.error);\r\n    };\r\n\r\n    return () => {\r\n      passiveRecognition.stop();\r\n      recognition.stop();\r\n    };\r\n  }, [isActivated, setTranscript]);\r\n\r\n  return (\r\n    <div className=\"mb-4 text-center\">\r\n      <p className=\"text-lg text-gray-700\">\r\n        ðŸŽ¤ Say <strong>\"start recording\"</strong> to begin.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
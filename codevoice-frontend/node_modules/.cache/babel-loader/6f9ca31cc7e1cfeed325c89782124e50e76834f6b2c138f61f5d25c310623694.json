{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendURL = \"http://localhost:5001\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"Your code will appear here.\");\n  const [isRecording, setIsRecording] = useState(false);\n\n  // Placeholder mic input start/stop - replace with your MicInput component if you want\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // You should integrate your MicInput logic here and update transcript accordingly\n  };\n\n  // Decide prompt from manual or transcript\n  const promptToUse = manualPrompt.trim() || transcript.trim();\n  const handleGenerateCode = async () => {\n    if (!promptToUse) {\n      alert(\"Please enter or speak your prompt first.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${backendURL}/api/generate-code`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: promptToUse\n        })\n      });\n      if (!res.ok) throw new Error(\"Network response was not ok\");\n      const data = await res.json();\n      setGeneratedCode(data.code || \"No code returned.\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n      alert(\"Failed to generate code.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      className: \"mb-4 px-4 py-2 bg-blue-600 text-white rounded\",\n      children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-semibold mb-1\",\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: transcript,\n        onChange: e => setTranscript(e.target.value),\n        rows: 4,\n        className: \"w-full p-2 border rounded resize-none\",\n        placeholder: \"Transcript will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-semibold mb-1\",\n        children: \"Or Enter Prompt Manually:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: manualPrompt,\n        onChange: e => setManualPrompt(e.target.value),\n        rows: 3,\n        className: \"w-full p-2 border rounded resize-none\",\n        placeholder: \"Type your prompt if mic does not work...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateCode,\n      className: \"mb-6 px-6 py-3 bg-green-600 text-white rounded font-semibold\",\n      children: \"\\u26A1 Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-4 rounded border\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Generated Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"whitespace-pre-wrap mt-2\",\n        children: generatedCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QLad4PUcLqNbLhSrBE6MLGx7qms=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","backendURL","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","generatedCode","setGeneratedCode","isRecording","setIsRecording","toggleRecording","promptToUse","trim","handleGenerateCode","alert","res","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","data","json","code","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst backendURL = \"http://localhost:5001\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"Your code will appear here.\");\n  const [isRecording, setIsRecording] = useState(false);\n\n  // Placeholder mic input start/stop - replace with your MicInput component if you want\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // You should integrate your MicInput logic here and update transcript accordingly\n  };\n\n  // Decide prompt from manual or transcript\n  const promptToUse = manualPrompt.trim() || transcript.trim();\n\n  const handleGenerateCode = async () => {\n    if (!promptToUse) {\n      alert(\"Please enter or speak your prompt first.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${backendURL}/api/generate-code`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: promptToUse }),\n      });\n      if (!res.ok) throw new Error(\"Network response was not ok\");\n      const data = await res.json();\n      setGeneratedCode(data.code || \"No code returned.\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n      alert(\"Failed to generate code.\");\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-xl mx-auto\">\n      <button\n        onClick={toggleRecording}\n        className=\"mb-4 px-4 py-2 bg-blue-600 text-white rounded\"\n      >\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n      </button>\n\n      <div className=\"mb-4\">\n        <label className=\"block font-semibold mb-1\">Transcript:</label>\n        <textarea\n          value={transcript}\n          onChange={(e) => setTranscript(e.target.value)}\n          rows={4}\n          className=\"w-full p-2 border rounded resize-none\"\n          placeholder=\"Transcript will appear here...\"\n        />\n      </div>\n\n      <div className=\"mb-6\">\n        <label className=\"block font-semibold mb-1\">Or Enter Prompt Manually:</label>\n        <textarea\n          value={manualPrompt}\n          onChange={(e) => setManualPrompt(e.target.value)}\n          rows={3}\n          className=\"w-full p-2 border rounded resize-none\"\n          placeholder=\"Type your prompt if mic does not work...\"\n        />\n      </div>\n\n      <button\n        onClick={handleGenerateCode}\n        className=\"mb-6 px-6 py-3 bg-green-600 text-white rounded font-semibold\"\n      >\n        âš¡ Generate Code\n      </button>\n\n      <div className=\"bg-gray-100 p-4 rounded border\">\n        <strong>Generated Code:</strong>\n        <pre className=\"whitespace-pre-wrap mt-2\">{generatedCode}</pre>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
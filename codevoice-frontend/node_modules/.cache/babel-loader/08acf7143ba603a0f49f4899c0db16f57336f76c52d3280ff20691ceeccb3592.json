{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [compileOutput, setCompileOutput] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n\n  // Start voice recognition\n  const startListening = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.start();\n    recognition.onresult = async event => {\n      const text = event.results[0][0].transcript;\n      setTranscript(text);\n      await handleVoiceCommand(text);\n    };\n  };\n\n  // Handle voice command\n  const handleVoiceCommand = async text => {\n    if (/generate code/i.test(text)) {\n      handleGenerate();\n    } else if (/compile/i.test(text)) {\n      handleCompile();\n    } else if (/save/i.test(text)) {\n      handleSave();\n    } else {\n      setTranscript(text);\n    }\n  };\n\n  // Call backend to generate code\n  const handleGenerate = async () => {\n    const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: transcript\n      })\n    });\n    const data = await res.json();\n    if (data.code) {\n      setGeneratedCode(data.code);\n    }\n  };\n\n  // Call backend to compile code\n  const handleCompile = async () => {\n    const res = await fetch(\"http://localhost:5000/api/compile\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: generatedCode,\n        input: userInput\n      })\n    });\n    const data = await res.json();\n    setCompileOutput(data.output || data.errors || data.error || \"\");\n  };\n\n  // Save code to file\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"generated_code.py\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Controlled IDE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      placeholder: \"Type your prompt or use voice...\",\n      rows: 3,\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompile,\n        children: \"Compile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        children: \"\\uD83C\\uDFA4 Voice Command\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: generatedCode,\n      onChange: e => setGeneratedCode(e.target.value),\n      rows: 10,\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Program Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"Enter input for program...\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        background: \"#eee\",\n        padding: \"10px\"\n      },\n      children: compileOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2O1+c0qtz9VszaiVBYOMf6EP1yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","generatedCode","setGeneratedCode","compileOutput","setCompileOutput","userInput","setUserInput","startListening","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","start","onresult","event","text","results","handleVoiceCommand","test","handleGenerate","handleCompile","handleSave","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","code","input","output","errors","error","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","width","marginBottom","onClick","background","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [compileOutput, setCompileOutput] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\");\n\n  // Start voice recognition\n  const startListening = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.start();\n    recognition.onresult = async (event) => {\n      const text = event.results[0][0].transcript;\n      setTranscript(text);\n      await handleVoiceCommand(text);\n    };\n  };\n\n  // Handle voice command\n  const handleVoiceCommand = async (text) => {\n    if (/generate code/i.test(text)) {\n      handleGenerate();\n    } else if (/compile/i.test(text)) {\n      handleCompile();\n    } else if (/save/i.test(text)) {\n      handleSave();\n    } else {\n      setTranscript(text);\n    }\n  };\n\n  // Call backend to generate code\n  const handleGenerate = async () => {\n    const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ prompt: transcript })\n    });\n    const data = await res.json();\n    if (data.code) {\n      setGeneratedCode(data.code);\n    }\n  };\n\n  // Call backend to compile code\n  const handleCompile = async () => {\n    const res = await fetch(\"http://localhost:5000/api/compile\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code: generatedCode, input: userInput })\n    });\n    const data = await res.json();\n    setCompileOutput(data.output || data.errors || data.error || \"\");\n  };\n\n  // Save code to file\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"generated_code.py\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h1>Voice Controlled IDE</h1>\n\n      <textarea\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        placeholder=\"Type your prompt or use voice...\"\n        rows={3}\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\n      />\n\n      <div style={{ marginBottom: \"10px\" }}>\n        <button onClick={handleGenerate}>Generate Code</button>\n        <button onClick={handleCompile}>Compile</button>\n        <button onClick={handleSave}>Save File</button>\n        <button onClick={startListening}>ðŸŽ¤ Voice Command</button>\n      </div>\n\n      <h2>Generated Code</h2>\n      <textarea\n        value={generatedCode}\n        onChange={(e) => setGeneratedCode(e.target.value)}\n        rows={10}\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\n      />\n\n      <h2>Program Input</h2>\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        placeholder=\"Enter input for program...\"\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\n      />\n\n      <h2>Output</h2>\n      <pre style={{ background: \"#eee\", padding: \"10px\" }}>{compileOutput}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Start recording\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    audioChunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = event => {\n      if (event.data.size > 0) audioChunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = handleStop;\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n\n  // Stop recording\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n\n  // Handle audio stop & send to backend\n  const handleStop = async () => {\n    const blob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    const formData = new FormData();\n    formData.append(\"audio\", blob);\n    const res = await fetch(\"/api/transcribe\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setTranscript(data.transcript);\n  };\n\n  // Generate code\n  const handleGenerate = async () => {\n    const prompt = transcript || manualPrompt;\n    if (!prompt) return alert(\"Please provide a prompt\");\n    const res = await fetch(\"/api/generate-code\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt\n      })\n    });\n    const data = await res.json();\n    setCode(data.code);\n  };\n\n  // Compile code\n  const handleCompile = async () => {\n    const res = await fetch(\"/api/compile\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code\n      })\n    });\n    const data = await res.json();\n    alert(`Output:\\n${data.output}`);\n  };\n\n  // Save file\n  const handleSave = () => {\n    const blob = new Blob([code], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"code.py\";\n    a.click();\n  };\n\n  // Voice command simulation\n  const handleVoiceCommand = command => {\n    const cmd = command.toLowerCase();\n    if (cmd.includes(\"generate\")) handleGenerate();else if (cmd.includes(\"compile\")) handleCompile();else if (cmd.includes(\"save\")) handleSave();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen bg-gray-900 text-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4\",\n      children: \"CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopRecording : startRecording,\n      className: `px-6 py-3 rounded-full text-lg font-semibold ${isRecording ? \"bg-red-500\" : \"bg-green-500\"}`,\n      children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      placeholder: \"Transcript will appear here...\",\n      className: \"w-full max-w-2xl h-24 mt-4 p-2 text-black rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: manualPrompt,\n      onChange: e => setManualPrompt(e.target.value),\n      placeholder: \"Type your prompt here...\",\n      className: \"w-full max-w-2xl mt-4 p-2 text-black rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        className: \"bg-blue-500 px-4 py-2 rounded\",\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompile,\n        className: \"bg-yellow-500 px-4 py-2 rounded\",\n        children: \"Compile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-purple-500 px-4 py-2 rounded\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Generated code will appear here...\",\n      className: \"w-full max-w-4xl h-64 mt-4 p-2 text-black rounded font-mono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Simulate voice command (generate/compile/save)\",\n        onKeyDown: e => e.key === \"Enter\" && handleVoiceCommand(e.target.value),\n        className: \"p-2 rounded text-black w-96\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tntV+q1Vnxx5sJ++pnkAnhrM31Q=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","code","setCode","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","size","push","onstop","handleStop","start","stopRecording","stop","blob","Blob","type","formData","FormData","append","res","fetch","method","body","json","handleGenerate","prompt","alert","headers","JSON","stringify","handleCompile","output","handleSave","url","URL","createObjectURL","a","document","createElement","href","download","click","handleVoiceCommand","command","cmd","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","onKeyDown","key","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Start recording\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    audioChunksRef.current = [];\n\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      if (event.data.size > 0) audioChunksRef.current.push(event.data);\n    };\n\n    mediaRecorderRef.current.onstop = handleStop;\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n\n  // Stop recording\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n\n  // Handle audio stop & send to backend\n  const handleStop = async () => {\n    const blob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n    const formData = new FormData();\n    formData.append(\"audio\", blob);\n\n    const res = await fetch(\"/api/transcribe\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const data = await res.json();\n    setTranscript(data.transcript);\n  };\n\n  // Generate code\n  const handleGenerate = async () => {\n    const prompt = transcript || manualPrompt;\n    if (!prompt) return alert(\"Please provide a prompt\");\n\n    const res = await fetch(\"/api/generate-code\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ prompt }),\n    });\n\n    const data = await res.json();\n    setCode(data.code);\n  };\n\n  // Compile code\n  const handleCompile = async () => {\n    const res = await fetch(\"/api/compile\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n\n    const data = await res.json();\n    alert(`Output:\\n${data.output}`);\n  };\n\n  // Save file\n  const handleSave = () => {\n    const blob = new Blob([code], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"code.py\";\n    a.click();\n  };\n\n  // Voice command simulation\n  const handleVoiceCommand = (command) => {\n    const cmd = command.toLowerCase();\n    if (cmd.includes(\"generate\")) handleGenerate();\n    else if (cmd.includes(\"compile\")) handleCompile();\n    else if (cmd.includes(\"save\")) handleSave();\n  };\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen bg-gray-900 text-white p-4\">\n      <h1 className=\"text-4xl font-bold mb-4\">CodeVoice</h1>\n\n      {/* Recording Section */}\n      <button\n        onClick={isRecording ? stopRecording : startRecording}\n        className={`px-6 py-3 rounded-full text-lg font-semibold ${\n          isRecording ? \"bg-red-500\" : \"bg-green-500\"\n        }`}\n      >\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n      </button>\n\n      {/* Transcript Display */}\n      <textarea\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        placeholder=\"Transcript will appear here...\"\n        className=\"w-full max-w-2xl h-24 mt-4 p-2 text-black rounded\"\n      />\n\n      {/* Manual Input */}\n      <input\n        type=\"text\"\n        value={manualPrompt}\n        onChange={(e) => setManualPrompt(e.target.value)}\n        placeholder=\"Type your prompt here...\"\n        className=\"w-full max-w-2xl mt-4 p-2 text-black rounded\"\n      />\n\n      {/* Buttons */}\n      <div className=\"flex gap-4 mt-4\">\n        <button onClick={handleGenerate} className=\"bg-blue-500 px-4 py-2 rounded\">\n          Generate Code\n        </button>\n        <button onClick={handleCompile} className=\"bg-yellow-500 px-4 py-2 rounded\">\n          Compile\n        </button>\n        <button onClick={handleSave} className=\"bg-purple-500 px-4 py-2 rounded\">\n          Save\n        </button>\n      </div>\n\n      {/* Code Output */}\n      <textarea\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Generated code will appear here...\"\n        className=\"w-full max-w-4xl h-64 mt-4 p-2 text-black rounded font-mono\"\n      />\n\n      {/* Voice Command Simulation (for testing) */}\n      <div className=\"mt-6\">\n        <input\n          type=\"text\"\n          placeholder=\"Simulate voice command (generate/compile/save)\"\n          onKeyDown={(e) => e.key === \"Enter\" && handleVoiceCommand(e.target.value)}\n          className=\"p-2 rounded text-black w-96\"\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  // Generate code from backend\n  const handleGenerateCode = async prompt => {\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n    }\n  };\n\n  // Compile Python code\n  const handleCompile = async () => {\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: generatedCode\n        })\n      });\n      const data = await res.json();\n      setOutput(data.output || data.error || \"\");\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n    }\n  };\n\n  // Save code as file\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], {\n      type: \"text/plain\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-blue-600 mb-6\",\n      children: \"CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicInput, {\n      onTranscriptionComplete: text => {\n        setTranscript(text);\n        setManualPrompt(text);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      readOnly: true,\n      placeholder: \"Transcript will appear here...\",\n      className: \"w-full max-w-2xl h-24 p-3 border rounded mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: manualPrompt,\n      onChange: e => setManualPrompt(e.target.value),\n      placeholder: \"Type your prompt if mic fails...\",\n      className: \"w-full max-w-2xl p-3 border rounded mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenerateCode(manualPrompt),\n        className: \"bg-green-500 text-white px-4 py-2 rounded\",\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompile,\n        className: \"bg-yellow-500 text-white px-4 py-2 rounded\",\n        children: \"Compile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      code: generatedCode,\n      setCode: setGeneratedCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 w-full max-w-2xl bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-2\",\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"whitespace-pre-wrap\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VoiceControl, {\n      onCommand: command => {\n        if (command === \"generate\") handleGenerateCode(manualPrompt);\n        if (command === \"compile\") handleCompile();\n        if (command === \"save\") handleSave();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WO3RRfEn/YGCFRgjLpyq8EUPj9w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MicInput","CodeEditor","VoiceControl","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","generatedCode","setGeneratedCode","output","setOutput","handleGenerateCode","prompt","res","fetch","method","headers","body","JSON","stringify","data","json","code","err","console","error","handleCompile","handleSave","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTranscriptionComplete","text","value","readOnly","placeholder","onChange","e","target","onClick","setCode","onCommand","command","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  // Generate code from backend\n  const handleGenerateCode = async (prompt) => {\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt }),\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n    }\n  };\n\n  // Compile Python code\n  const handleCompile = async () => {\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code: generatedCode }),\n      });\n      const data = await res.json();\n      setOutput(data.output || data.error || \"\");\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n    }\n  };\n\n  // Save code as file\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], { type: \"text/plain\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6 flex flex-col items-center\">\n      {/* Title */}\n      <h1 className=\"text-4xl font-bold text-blue-600 mb-6\">CodeVoice</h1>\n\n      {/* Mic Input */}\n      <MicInput\n        onTranscriptionComplete={(text) => {\n          setTranscript(text);\n          setManualPrompt(text);\n        }}\n      />\n\n      {/* Transcript Box */}\n      <textarea\n        value={transcript}\n        readOnly\n        placeholder=\"Transcript will appear here...\"\n        className=\"w-full max-w-2xl h-24 p-3 border rounded mb-4\"\n      />\n\n      {/* Manual Prompt Input */}\n      <input\n        type=\"text\"\n        value={manualPrompt}\n        onChange={(e) => setManualPrompt(e.target.value)}\n        placeholder=\"Type your prompt if mic fails...\"\n        className=\"w-full max-w-2xl p-3 border rounded mb-4\"\n      />\n\n      {/* Buttons */}\n      <div className=\"flex gap-4 mb-6\">\n        <button\n          onClick={() => handleGenerateCode(manualPrompt)}\n          className=\"bg-green-500 text-white px-4 py-2 rounded\"\n        >\n          Generate Code\n        </button>\n        <button\n          onClick={handleCompile}\n          className=\"bg-yellow-500 text-white px-4 py-2 rounded\"\n        >\n          Compile\n        </button>\n        <button\n          onClick={handleSave}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Save\n        </button>\n      </div>\n\n      {/* Code Editor */}\n      <CodeEditor code={generatedCode} setCode={setGeneratedCode} />\n\n      {/* Output */}\n      {output && (\n        <div className=\"mt-6 w-full max-w-2xl bg-white p-4 rounded shadow\">\n          <h2 className=\"font-bold mb-2\">Output:</h2>\n          <pre className=\"whitespace-pre-wrap\">{output}</pre>\n        </div>\n      )}\n\n      {/* Voice Control */}\n      <VoiceControl\n        onCommand={(command) => {\n          if (command === \"generate\") handleGenerateCode(manualPrompt);\n          if (command === \"compile\") handleCompile();\n          if (command === \"save\") handleSave();\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMgB,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAO,CAAC;MACjC,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7Bb,gBAAgB,CAACY,IAAI,CAACE,IAAI,IAAI,EAAE,CAAC;IACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEG,IAAI,EAAEf;QAAc,CAAC;MAC9C,CAAC,CAAC;MACF,MAAMa,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BX,SAAS,CAACU,IAAI,CAACX,MAAM,IAAIW,IAAI,CAACK,KAAK,IAAI,EAAE,CAAC;IAC5C,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACtB,aAAa,CAAC,EAAE;MAAEuB,IAAI,EAAE;IAAa,CAAC,CAAC;IAC9D,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrCG,IAAI,CAACM,QAAQ,GAAG,SAAS;IACzBL,QAAQ,CAACf,IAAI,CAACqB,WAAW,CAACP,IAAI,CAAC;IAC/BA,IAAI,CAACQ,KAAK,CAAC,CAAC;IACZP,QAAQ,CAACf,IAAI,CAACuB,WAAW,CAACT,IAAI,CAAC;EACjC,CAAC;EAED,oBACE/B,OAAA;IAAKyC,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBAEtE1C,OAAA;MAAIyC,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpE9C,OAAA,CAACJ,QAAQ;MACPmD,uBAAuB,EAAGC,IAAI,IAAK;QACjC5C,aAAa,CAAC4C,IAAI,CAAC;QACnB1C,eAAe,CAAC0C,IAAI,CAAC;MACvB;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGF9C,OAAA;MACEiD,KAAK,EAAE9C,UAAW;MAClB+C,QAAQ;MACRC,WAAW,EAAC,gCAAgC;MAC5CV,SAAS,EAAC;IAA+C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAGF9C,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXmB,KAAK,EAAE5C,YAAa;MACpB+C,QAAQ,EAAGC,CAAC,IAAK/C,eAAe,CAAC+C,CAAC,CAACC,MAAM,CAACL,KAAK,CAAE;MACjDE,WAAW,EAAC,kCAAkC;MAC9CV,SAAS,EAAC;IAA0C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAGF9C,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B1C,OAAA;QACEuD,OAAO,EAAEA,CAAA,KAAM5C,kBAAkB,CAACN,YAAY,CAAE;QAChDoC,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EACtD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9C,OAAA;QACEuD,OAAO,EAAE7B,aAAc;QACvBe,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9C,OAAA;QACEuD,OAAO,EAAE5B,UAAW;QACpBc,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EACrD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN9C,OAAA,CAACH,UAAU;MAACyB,IAAI,EAAEf,aAAc;MAACiD,OAAO,EAAEhD;IAAiB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG7DrC,MAAM,iBACLT,OAAA;MAAKyC,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChE1C,OAAA;QAAIyC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C9C,OAAA;QAAKyC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEjC;MAAM;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACN,eAGD9C,OAAA,CAACF,YAAY;MACX2D,SAAS,EAAGC,OAAO,IAAK;QACtB,IAAIA,OAAO,KAAK,UAAU,EAAE/C,kBAAkB,CAACN,YAAY,CAAC;QAC5D,IAAIqD,OAAO,KAAK,SAAS,EAAEhC,aAAa,CAAC,CAAC;QAC1C,IAAIgC,OAAO,KAAK,MAAM,EAAE/B,UAAU,CAAC,CAAC;MACtC;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5C,EAAA,CAxHuBD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
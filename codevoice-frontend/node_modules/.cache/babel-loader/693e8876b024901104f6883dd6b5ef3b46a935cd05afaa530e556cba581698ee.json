{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [status, setStatus] = useState(\"Listening for commands...\");\n  const listeningRef = useRef(false); // whether we are actively recording prompt\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // ðŸŽ¤ Start long recording for prompt\n  const startRecording = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = handleStopRecording;\n      mediaRecorderRef.current.start();\n      listeningRef.current = true;\n      setStatus(\"Recording prompt... Say 'stop recording' to finish.\");\n    } catch (err) {\n      console.error(\"Microphone error:\", err);\n      setStatus(\"Microphone access denied.\");\n    }\n  }, []);\n\n  // ðŸ›‘ Stop long recording\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && listeningRef.current) {\n      mediaRecorderRef.current.stop();\n      listeningRef.current = false;\n      setStatus(\"Processing prompt...\");\n    }\n  }, []);\n\n  // ðŸŽ¯ Handle after stop\n  const handleStopRecording = useCallback(async () => {\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    await sendAudioToBackend(audioBlob, true); // true means it's prompt recording\n  }, []);\n\n  // ðŸ“¡ Send audio to backend for transcription\n  const sendAudioToBackend = useCallback(async (audioBlob, isPrompt = false) => {\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob, \"recording.wav\");\n    try {\n      const res = await fetch(\"/api/transcribe\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (isPrompt) {\n        setTranscript(data.text || \"\");\n        setStatus(\"Prompt recorded. Say 'generate code', 'compile code', or 'save file'.\");\n      } else {\n        handleCommand(data.text);\n      }\n    } catch (err) {\n      console.error(\"Transcription error:\", err);\n    }\n  }, []);\n\n  // ðŸŽ¤ Continuous background hotword detection\n  const listenForCommands = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      let chunks = [];\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) chunks.push(e.data);\n      };\n      recorder.onstop = async () => {\n        const blob = new Blob(chunks, {\n          type: \"audio/wav\"\n        });\n        chunks = [];\n        await sendAudioToBackend(blob, false); // false means hotword detection\n        recorder.start(); // restart continuous loop\n        setTimeout(() => recorder.stop(), 2500); // every 2.5 sec\n      };\n      recorder.start();\n      setTimeout(() => recorder.stop(), 2500);\n    } catch (err) {\n      console.error(\"Command listening error:\", err);\n    }\n  }, []);\n\n  // ðŸ—£ Handle recognized commands\n  const handleCommand = useCallback(text => {\n    if (!text) return;\n    const command = text.toLowerCase();\n    if (command.includes(\"start recording\") && !listeningRef.current) {\n      startRecording();\n    } else if (command.includes(\"stop recording\") && listeningRef.current) {\n      stopRecording();\n    } else if (command.includes(\"generate code\")) {\n      generateCode();\n    } else if (command.includes(\"compile code\")) {\n      compileCode();\n    } else if (command.includes(\"save file\")) {\n      saveCode();\n    }\n  }, [startRecording, stopRecording, generateCode, compileCode, saveCode]);\n\n  // ðŸ¤– Generate code\n  const generateCode = useCallback(async () => {\n    setStatus(\"Generating code...\");\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: transcript\n        })\n      });\n      const data = await res.json();\n      setCode(data.code || \"\");\n      setStatus(\"Code generated successfully\");\n    } catch {\n      setStatus(\"Error generating code.\");\n    }\n  }, [transcript]);\n\n  // ðŸ–¥ Compile\n  const compileCode = useCallback(async () => {\n    setStatus(\"Compiling code...\");\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await res.json();\n      alert(`Compilation Output:\\n${data.output}`);\n      setStatus(\"Compilation complete\");\n    } catch {\n      setStatus(\"Error compiling code.\");\n    }\n  }, [code]);\n\n  // ðŸ’¾ Save\n  const saveCode = useCallback(() => {\n    const blob = new Blob([code], {\n      type: \"text/plain\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    link.click();\n    setStatus(\"Code saved locally\");\n  }, [code]);\n\n  // ðŸ”„ Start hotword detection on load\n  useEffect(() => {\n    listenForCommands();\n  }, [listenForCommands]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"\\uD83C\\uDFA4 CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6 text-gray-300\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      placeholder: \"Your transcript or manual prompt...\",\n      className: \"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Generated code...\",\n      className: \"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-green-400 font-mono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8jGNF7QTik15GHgzKJT07du5qSE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","code","setCode","status","setStatus","listeningRef","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","size","push","onstop","handleStopRecording","start","err","console","error","stopRecording","stop","audioBlob","Blob","type","sendAudioToBackend","isPrompt","formData","FormData","append","res","fetch","method","body","json","text","handleCommand","listenForCommands","recorder","chunks","e","blob","setTimeout","command","toLowerCase","includes","generateCode","compileCode","saveCode","headers","JSON","stringify","prompt","alert","output","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [status, setStatus] = useState(\"Listening for commands...\");\n\n  const listeningRef = useRef(false); // whether we are actively recording prompt\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // ðŸŽ¤ Start long recording for prompt\n  const startRecording = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = handleStopRecording;\n      mediaRecorderRef.current.start();\n      listeningRef.current = true;\n      setStatus(\"Recording prompt... Say 'stop recording' to finish.\");\n    } catch (err) {\n      console.error(\"Microphone error:\", err);\n      setStatus(\"Microphone access denied.\");\n    }\n  }, []);\n\n  // ðŸ›‘ Stop long recording\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && listeningRef.current) {\n      mediaRecorderRef.current.stop();\n      listeningRef.current = false;\n      setStatus(\"Processing prompt...\");\n    }\n  }, []);\n\n  // ðŸŽ¯ Handle after stop\n  const handleStopRecording = useCallback(async () => {\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n    await sendAudioToBackend(audioBlob, true); // true means it's prompt recording\n  }, []);\n\n  // ðŸ“¡ Send audio to backend for transcription\n  const sendAudioToBackend = useCallback(async (audioBlob, isPrompt = false) => {\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob, \"recording.wav\");\n\n    try {\n      const res = await fetch(\"/api/transcribe\", { method: \"POST\", body: formData });\n      const data = await res.json();\n      if (isPrompt) {\n        setTranscript(data.text || \"\");\n        setStatus(\"Prompt recorded. Say 'generate code', 'compile code', or 'save file'.\");\n      } else {\n        handleCommand(data.text);\n      }\n    } catch (err) {\n      console.error(\"Transcription error:\", err);\n    }\n  }, []);\n\n  // ðŸŽ¤ Continuous background hotword detection\n  const listenForCommands = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const recorder = new MediaRecorder(stream);\n      let chunks = [];\n\n      recorder.ondataavailable = (e) => {\n        if (e.data.size > 0) chunks.push(e.data);\n      };\n\n      recorder.onstop = async () => {\n        const blob = new Blob(chunks, { type: \"audio/wav\" });\n        chunks = [];\n        await sendAudioToBackend(blob, false); // false means hotword detection\n        recorder.start(); // restart continuous loop\n        setTimeout(() => recorder.stop(), 2500); // every 2.5 sec\n      };\n\n      recorder.start();\n      setTimeout(() => recorder.stop(), 2500);\n    } catch (err) {\n      console.error(\"Command listening error:\", err);\n    }\n  }, []);\n\n  // ðŸ—£ Handle recognized commands\n  const handleCommand = useCallback((text) => {\n    if (!text) return;\n    const command = text.toLowerCase();\n\n    if (command.includes(\"start recording\") && !listeningRef.current) {\n      startRecording();\n    } else if (command.includes(\"stop recording\") && listeningRef.current) {\n      stopRecording();\n    } else if (command.includes(\"generate code\")) {\n      generateCode();\n    } else if (command.includes(\"compile code\")) {\n      compileCode();\n    } else if (command.includes(\"save file\")) {\n      saveCode();\n    }\n  }, [startRecording, stopRecording, generateCode, compileCode, saveCode]);\n\n  // ðŸ¤– Generate code\n  const generateCode = useCallback(async () => {\n    setStatus(\"Generating code...\");\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: transcript }),\n      });\n      const data = await res.json();\n      setCode(data.code || \"\");\n      setStatus(\"Code generated successfully\");\n    } catch {\n      setStatus(\"Error generating code.\");\n    }\n  }, [transcript]);\n\n  // ðŸ–¥ Compile\n  const compileCode = useCallback(async () => {\n    setStatus(\"Compiling code...\");\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code }),\n      });\n      const data = await res.json();\n      alert(`Compilation Output:\\n${data.output}`);\n      setStatus(\"Compilation complete\");\n    } catch {\n      setStatus(\"Error compiling code.\");\n    }\n  }, [code]);\n\n  // ðŸ’¾ Save\n  const saveCode = useCallback(() => {\n    const blob = new Blob([code], { type: \"text/plain\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    link.click();\n    setStatus(\"Code saved locally\");\n  }, [code]);\n\n  // ðŸ”„ Start hotword detection on load\n  useEffect(() => {\n    listenForCommands();\n  }, [listenForCommands]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white flex flex-col items-center p-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">ðŸŽ¤ CodeVoice</h1>\n      <p className=\"mb-6 text-gray-300\">{status}</p>\n\n      {/* Transcript Box */}\n      <textarea\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        placeholder=\"Your transcript or manual prompt...\"\n        className=\"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg\"\n      />\n\n      {/* Code Box */}\n      <textarea\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Generated code...\"\n        className=\"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-green-400 font-mono\"\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\n// VoiceControl.jsx\n\nimport React, { useEffect } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceControl = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  useEffect(() => {\n    if (transcript.toLowerCase().includes(\"start recording\")) {\n      alert(\"ðŸŽ¤ Voice command detected: Starting recording...\");\n      // Call your recording function here\n      resetTranscript();\n    }\n  }, [transcript]);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SpeechRecognition.startListening({\n        continuous: true\n      }),\n      children: \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Listening:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), \" \", listening ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"8+bNS93Rz8b6fYpoqblGua0k5t4=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","VoiceControl","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","toLowerCase","includes","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startListening","continuous","stopListening","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["// VoiceControl.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst VoiceControl = () => {\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  useEffect(() => {\r\n    if (transcript.toLowerCase().includes(\"start recording\")) {\r\n      alert(\"ðŸŽ¤ Voice command detected: Starting recording...\");\r\n      // Call your recording function here\r\n      resetTranscript();\r\n    }\r\n  }, [transcript]);\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Your browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Voice Control</h1>\r\n      <button onClick={() => SpeechRecognition.startListening({ continuous: true })}>\r\n        Start Listening\r\n      </button>\r\n      <button onClick={SpeechRecognition.stopListening}>\r\n        Stop Listening\r\n      </button>\r\n      <p><strong>Listening:</strong> {listening ? \"Yes\" : \"No\"}</p>\r\n      <p><strong>Transcript:</strong> {transcript}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGR,oBAAoB,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MACxDC,KAAK,CAAC,kDAAkD,CAAC;MACzD;MACAJ,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACG,gCAAgC,EAAE;IACrC,oBAAON,OAAA;MAAAU,QAAA,EAAM;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtE;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACmB,cAAc,CAAC;QAAEC,UAAU,EAAE;MAAK,CAAC,CAAE;MAAAP,QAAA,EAAC;IAE/E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA;MAAQe,OAAO,EAAElB,iBAAiB,CAACqB,aAAc;MAAAR,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACV,SAAS,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Dd,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACX,UAAU;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjCID,YAAY;EAAA,QAMZH,oBAAoB;AAAA;AAAAqB,EAAA,GANpBlB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
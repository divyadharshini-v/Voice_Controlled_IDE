{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\n// src/VoiceControl.jsx\nimport React, { useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceControl = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  useEffect(() => {\n    if (!browserSupportsSpeechRecognition) return;\n\n    // Start passive listening to wait for the user to say \"start recording\"\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  }, [browserSupportsSpeechRecognition]);\n  useEffect(() => {\n    if (transcript.toLowerCase().includes(\"start recording\")) {\n      console.log(\"Voice command detected: Start recording\");\n      SpeechRecognition.stopListening(); // stop passive\n      setTimeout(() => {\n        resetTranscript(); // clear the \"start recording\" phrase\n        SpeechRecognition.startListening({\n          continuous: true\n        }); // start actual recording\n      }, 500);\n    }\n  }, [transcript, resetTranscript]);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voice Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this), \" \", listening ? \"Listening...\" : \"Not Listening\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), \" \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"9LYbONfsofjQOw+qMWBPIB7tGSA=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","VoiceControl","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","toLowerCase","includes","console","log","stopListening","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["// src/VoiceControl.jsx\r\nimport React, { useEffect } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\n\r\nconst VoiceControl = () => {\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  useEffect(() => {\r\n    if (!browserSupportsSpeechRecognition) return;\r\n    \r\n    // Start passive listening to wait for the user to say \"start recording\"\r\n    SpeechRecognition.startListening({ continuous: true });\r\n\r\n  }, [browserSupportsSpeechRecognition]);\r\n\r\n  useEffect(() => {\r\n    if (transcript.toLowerCase().includes(\"start recording\")) {\r\n      console.log(\"Voice command detected: Start recording\");\r\n      SpeechRecognition.stopListening(); // stop passive\r\n      setTimeout(() => {\r\n        resetTranscript(); // clear the \"start recording\" phrase\r\n        SpeechRecognition.startListening({ continuous: true }); // start actual recording\r\n      }, 500);\r\n    }\r\n  }, [transcript, resetTranscript]);\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <p>Your browser does not support speech recognition.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\", fontFamily: \"sans-serif\" }}>\r\n      <h2>Voice Control</h2>\r\n      <p><strong>Status:</strong> {listening ? \"Listening...\" : \"Not Listening\"}</p>\r\n      <p><strong>Transcript:</strong> {transcript}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGR,oBAAoB,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,gCAAgC,EAAE;;IAEvC;IACAT,iBAAiB,CAACU,cAAc,CAAC;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;EAExD,CAAC,EAAE,CAACF,gCAAgC,CAAC,CAAC;EAEtCV,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MACxDC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtDf,iBAAiB,CAACgB,aAAa,CAAC,CAAC,CAAC,CAAC;MACnCC,UAAU,CAAC,MAAM;QACfT,eAAe,CAAC,CAAC,CAAC,CAAC;QACnBR,iBAAiB,CAACU,cAAc,CAAC;UAAEC,UAAU,EAAE;QAAK,CAAC,CAAC,CAAC,CAAC;MAC1D,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAACL,UAAU,EAAEE,eAAe,CAAC,CAAC;EAEjC,IAAI,CAACC,gCAAgC,EAAE;IACrC,oBAAON,OAAA;MAAAe,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjE;EAEA,oBACEnB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAa,CAAE;IAAAP,QAAA,gBACxDf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MAAAe,QAAA,gBAAGf,OAAA;QAAAe,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACf,SAAS,GAAG,cAAc,GAAG,eAAe;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9EnB,OAAA;MAAAe,QAAA,gBAAGf,OAAA;QAAAe,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAChB,UAAU;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,YAAY;EAAA,QAMZH,oBAAoB;AAAA;AAAAyB,EAAA,GANpBtB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
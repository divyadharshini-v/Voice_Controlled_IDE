{"ast":null,"code":"var _jsxFileName = \"D:\\\\Voice_Controlled_IDE\\\\codevoice-frontend\\\\src\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MicInput from './MicInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeEditor() {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [generatedCode, setGeneratedCode] = useState('');\n  const [manualPrompt, setManualPrompt] = useState('');\n  const handleGenerateCode = async () => {\n    const prompt = transcript || manualPrompt;\n    if (!prompt) return alert('Please provide a prompt or use the mic.');\n    try {\n      const res = await fetch('http://localhost:5000/api/parse', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      if (!res.ok) throw new Error('Failed to generate code');\n      const data = await res.json();\n      setGeneratedCode(data.code || 'No code returned.');\n    } catch (err) {\n      console.error('Code generation failed:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"\\uD83C\\uDFA4 Voice Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicInput, {\n      setTranscript: setTranscript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium\",\n      children: \"\\uD83D\\uDCDD Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border rounded\",\n      rows: 3,\n      value: transcript,\n      readOnly: true,\n      placeholder: \"Transcript from mic will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium\",\n      children: \"\\u270F\\uFE0F Or Enter Prompt Manually\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border rounded\",\n      rows: 3,\n      value: manualPrompt,\n      onChange: e => setManualPrompt(e.target.value),\n      placeholder: \"Type here if mic is not working\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateCode,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"\\u26A1 Generate Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium\",\n      children: \"\\uD83D\\uDCBB Generated Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"bg-gray-100 p-4 rounded overflow-x-auto\",\n      children: generatedCode || 'Your code will appear here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"cul1/FPaX60YHZxS/Ehv6e6C9DM=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","MicInput","jsxDEV","_jsxDEV","CodeEditor","_s","transcript","setTranscript","generatedCode","setGeneratedCode","manualPrompt","setManualPrompt","handleGenerateCode","prompt","alert","res","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","code","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Voice_Controlled_IDE/codevoice-frontend/src/CodeEditor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MicInput from './MicInput';\r\n\r\nfunction CodeEditor() {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [generatedCode, setGeneratedCode] = useState('');\r\n  const [manualPrompt, setManualPrompt] = useState('');\r\n\r\n  const handleGenerateCode = async () => {\r\n    const prompt = transcript || manualPrompt;\r\n    if (!prompt) return alert('Please provide a prompt or use the mic.');\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/parse', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ prompt }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error('Failed to generate code');\r\n      const data = await res.json();\r\n      setGeneratedCode(data.code || 'No code returned.');\r\n    } catch (err) {\r\n      console.error('Code generation failed:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-4\">\r\n      <h2 className=\"text-xl font-bold\">üé§ Voice Prompt</h2>\r\n      <MicInput setTranscript={setTranscript} />\r\n\r\n      <h3 className=\"font-medium\">üìù Transcript</h3>\r\n      <textarea\r\n        className=\"w-full p-2 border rounded\"\r\n        rows={3}\r\n        value={transcript}\r\n        readOnly\r\n        placeholder=\"Transcript from mic will appear here\"\r\n      />\r\n\r\n      <h3 className=\"font-medium\">‚úèÔ∏è Or Enter Prompt Manually</h3>\r\n      <textarea\r\n        className=\"w-full p-2 border rounded\"\r\n        rows={3}\r\n        value={manualPrompt}\r\n        onChange={(e) => setManualPrompt(e.target.value)}\r\n        placeholder=\"Type here if mic is not working\"\r\n      />\r\n\r\n      <button\r\n        onClick={handleGenerateCode}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n      >\r\n        ‚ö° Generate Code\r\n      </button>\r\n\r\n      <h3 className=\"font-medium\">üíª Generated Code</h3>\r\n      <pre className=\"bg-gray-100 p-4 rounded overflow-x-auto\">\r\n        {generatedCode || 'Your code will appear here'}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
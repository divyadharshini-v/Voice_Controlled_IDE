{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n\n  // ‚úÖ Text-to-Speech Welcome Greeting\n  useEffect(() => {\n    const greeting = \"Welcome to CodeVoice, a voice-controlled IDE. Say what you want and our website will do that.\";\n    const utterance = new SpeechSynthesisUtterance(greeting);\n    speechSynthesis.speak(utterance);\n  }, []);\n\n  // ‚úÖ Trigger backend call for code generation\n  const handleGenerate = async prompt => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/parse\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      setGeneratedCode(data.generated_code || \"// No code generated.\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n    }\n  };\n\n  // ‚úÖ Trigger backend call for compiling code\n  const handleCompile = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: generatedCode\n        })\n      });\n      const data = await response.json();\n      alert(\"Output:\\n\" + data.output);\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n    }\n  };\n\n  // ‚úÖ Save code to a file (frontend only, for now)\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"generated_code.py\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6 text-center\",\n      children: \"\\uD83C\\uDFA7 CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceControl, {\n      setTranscript: setTranscript,\n      onGenerate: handleGenerate,\n      onCompile: handleCompile,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicInput, {\n      setTranscript: setTranscript,\n      transcript: transcript,\n      manualPrompt: manualPrompt,\n      setManualPrompt: setManualPrompt,\n      setGeneratedCode: setGeneratedCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      transcript: transcript,\n      manualPrompt: manualPrompt,\n      setGeneratedCode: setGeneratedCode,\n      generatedCode: generatedCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"U5CSuCKRlHmgXxbiH6RTZAczAzY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MicInput","CodeEditor","VoiceControl","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","generatedCode","setGeneratedCode","greeting","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","handleGenerate","prompt","response","fetch","method","headers","body","JSON","stringify","data","json","generated_code","err","console","error","handleCompile","code","alert","output","handleSave","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","onCompile","onSave","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\n\nconst App = () => {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n\n  // ‚úÖ Text-to-Speech Welcome Greeting\n  useEffect(() => {\n    const greeting = \"Welcome to CodeVoice, a voice-controlled IDE. Say what you want and our website will do that.\";\n    const utterance = new SpeechSynthesisUtterance(greeting);\n    speechSynthesis.speak(utterance);\n  }, []);\n\n  // ‚úÖ Trigger backend call for code generation\n  const handleGenerate = async (prompt) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/parse\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt }),\n      });\n      const data = await response.json();\n      setGeneratedCode(data.generated_code || \"// No code generated.\");\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n    }\n  };\n\n  // ‚úÖ Trigger backend call for compiling code\n  const handleCompile = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code: generatedCode }),\n      });\n      const data = await response.json();\n      alert(\"Output:\\n\" + data.output);\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n    }\n  };\n\n  // ‚úÖ Save code to a file (frontend only, for now)\n  const handleSave = () => {\n    const blob = new Blob([generatedCode], { type: \"text/plain;charset=utf-8\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"generated_code.py\";\n    link.click();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center p-6\">\n      <h1 className=\"text-4xl font-bold mb-6 text-center\">üéß CodeVoice</h1>\n\n      {/* üó£Ô∏è VoiceControl listens for \"generate\", \"compile\", \"save\" */}\n      <VoiceControl\n        setTranscript={setTranscript}\n        onGenerate={handleGenerate}\n        onCompile={handleCompile}\n        onSave={handleSave}\n      />\n\n      {/* üéôÔ∏è MicInput: voice or manual input */}\n      <MicInput\n        setTranscript={setTranscript}\n        transcript={transcript}\n        manualPrompt={manualPrompt}\n        setManualPrompt={setManualPrompt}\n        setGeneratedCode={setGeneratedCode}\n      />\n\n      {/* üíª Code display and editing */}\n      <CodeEditor\n        transcript={transcript}\n        manualPrompt={manualPrompt}\n        setGeneratedCode={setGeneratedCode}\n        generatedCode={generatedCode}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingButton({\n  onClick,\n  loading,\n  children,\n  color\n}) {\n  const colors = {\n    purple: \"bg-purple-600 hover:bg-purple-700 focus:ring-purple-300\",\n    indigo: \"bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-300\",\n    gray: \"bg-gray-600 hover:bg-gray-700 focus:ring-gray-300\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    disabled: loading,\n    className: `px-6 py-3 text-white text-lg font-semibold rounded shadow \n                  disabled:opacity-50 focus:outline-none focus:ring-4 flex items-center gap-2 justify-center \n                  ${colors[color] || colors.purple}`,\n    children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"animate-spin rounded-full h-4 w-4 border-t-2 border-white border-solid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = LoadingButton;\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [compileOutput, setCompileOutput] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n  const [loadingGenerate, setLoadingGenerate] = useState(false);\n  const [loadingCompile, setLoadingCompile] = useState(false);\n  const [compileInputs, setCompileInputs] = useState(\"\");\n\n  // ðŸŽ¤ Voice recording\n  const handleStartRecording = async () => {\n    setRecording(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      const chunks = [];\n      mediaRecorder.ondataavailable = e => chunks.push(e.data);\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunks, {\n          type: \"audio/wav\"\n        });\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"recording.wav\");\n        const res = await fetch(\"http://localhost:5000/api/transcribe\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await res.json();\n        setTranscript(data.transcript || \"\");\n        setRecording(false);\n      };\n      mediaRecorder.start();\n      setTimeout(() => mediaRecorder.stop(), 4000);\n    } catch (err) {\n      console.error(err);\n      alert(\"Could not access microphone.\");\n      setRecording(false);\n    }\n  };\n\n  // âš¡ Generate code\n  const handleGenerateCode = async () => {\n    const promptToSend = manualPrompt.trim() || transcript.trim();\n    if (!promptToSend) return alert(\"No prompt provided\");\n    console.log(\"Sending prompt:\", promptToSend);\n    setLoadingGenerate(true);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: promptToSend\n        })\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n    } catch {\n      alert(\"Error generating code.\");\n    }\n    setLoadingGenerate(false);\n  };\n\n  // ðŸ›  Compile code\n  const handleCompile = async () => {\n    if (!generatedCode.trim()) return alert(\"No code to compile\");\n    setLoadingCompile(true);\n    setCompileOutput(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: generatedCode,\n          inputs: compileInputs ? compileInputs.split(\",\").map(i => i.trim()) : []\n        })\n      });\n      const data = await res.json();\n      setCompileOutput(data.output || data.errors || \"// No output or errors returned\");\n    } catch {\n      alert(\"Error compiling code.\");\n    }\n    setLoadingCompile(false);\n  };\n\n  // ðŸ’¾ Save code as file\n  const handleSave = () => {\n    if (!generatedCode.trim()) return alert(\"No code to save\");\n    const blob = new Blob([generatedCode], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-indigo-100 via-white to-purple-100 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"w-full text-center py-8 bg-gradient-to-r from-purple-600 to-indigo-600 text-white shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold\",\n        children: \"\\uD83C\\uDF99 Code with Your Voice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-lg opacity-90\",\n        children: \"No keyboard? No problem \\u2014 your voice is the new IDE.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-5xl p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartRecording,\n          disabled: recording,\n          className: `w-28 h-28 rounded-full flex items-center justify-center shadow-xl text-4xl transition-all focus:outline-none focus:ring-4 ${recording ? \"bg-red-500 animate-pulse focus:ring-red-300\" : \"bg-green-500 hover:bg-green-600 focus:ring-green-300\"}`,\n          children: recording ? \"ðŸŽ™\" : \"ðŸŽ¤\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3 text-gray-700 text-lg\",\n          children: recording ? \"Listening...\" : \"Click to speak your code idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: transcript,\n          onChange: e => setTranscript(e.target.value),\n          placeholder: \"Transcript will appear here...\",\n          rows: 2,\n          className: \"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manualPrompt,\n          onChange: e => setManualPrompt(e.target.value),\n          placeholder: \"Or type your prompt...\",\n          className: \"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n            onClick: handleGenerateCode,\n            loading: loadingGenerate,\n            color: \"purple\",\n            children: \"\\u26A1 Generate Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            onClick: handleSave,\n            loading: false,\n            color: \"gray\",\n            children: \"\\uD83D\\uDCBE Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-900 text-green-400 p-4 rounded-lg overflow-x-auto min-h-[150px] text-sm\",\n          children: generatedCode || \"// Your generated code will appear here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: compileInputs,\n          onChange: e => setCompileInputs(e.target.value),\n          placeholder: \"Enter inputs separated by commas\",\n          className: \"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-indigo-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          onClick: handleCompile,\n          loading: loadingCompile,\n          color: \"indigo\",\n          children: \"\\uD83D\\uDEE0 Compile & Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-black text-white p-4 rounded-lg overflow-x-auto min-h-[100px] text-sm\",\n          children: compileOutput || \"// Output will appear here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LnYiQ7L6s9z3YD54hITMoDNROkg=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingButton\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoadingButton","onClick","loading","children","color","colors","purple","indigo","gray","disabled","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","transcript","setTranscript","manualPrompt","setManualPrompt","generatedCode","setGeneratedCode","compileOutput","setCompileOutput","recording","setRecording","loadingGenerate","setLoadingGenerate","loadingCompile","setLoadingCompile","compileInputs","setCompileInputs","handleStartRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","formData","FormData","append","res","fetch","method","body","json","start","setTimeout","stop","err","console","error","alert","handleGenerateCode","promptToSend","trim","log","headers","JSON","stringify","prompt","code","handleCompile","inputs","split","map","i","output","errors","handleSave","link","document","createElement","href","URL","createObjectURL","download","click","value","onChange","target","placeholder","rows","_c2","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction LoadingButton({ onClick, loading, children, color }) {\n  const colors = {\n    purple: \"bg-purple-600 hover:bg-purple-700 focus:ring-purple-300\",\n    indigo: \"bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-300\",\n    gray: \"bg-gray-600 hover:bg-gray-700 focus:ring-gray-300\",\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={loading}\n      className={`px-6 py-3 text-white text-lg font-semibold rounded shadow \n                  disabled:opacity-50 focus:outline-none focus:ring-4 flex items-center gap-2 justify-center \n                  ${colors[color] || colors.purple}`}\n    >\n      {loading && (\n        <span className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-white border-solid\"></span>\n      )}\n      {children}\n    </button>\n  );\n}\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [manualPrompt, setManualPrompt] = useState(\"\");\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [compileOutput, setCompileOutput] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n  const [loadingGenerate, setLoadingGenerate] = useState(false);\n  const [loadingCompile, setLoadingCompile] = useState(false);\n  const [compileInputs, setCompileInputs] = useState(\"\");\n\n  // ðŸŽ¤ Voice recording\n  const handleStartRecording = async () => {\n    setRecording(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      const chunks = [];\n\n      mediaRecorder.ondataavailable = (e) => chunks.push(e.data);\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunks, { type: \"audio/wav\" });\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"recording.wav\");\n\n        const res = await fetch(\"http://localhost:5000/api/transcribe\", {\n          method: \"POST\",\n          body: formData,\n        });\n        const data = await res.json();\n        setTranscript(data.transcript || \"\");\n        setRecording(false);\n      };\n\n      mediaRecorder.start();\n      setTimeout(() => mediaRecorder.stop(), 4000);\n    } catch (err) {\n      console.error(err);\n      alert(\"Could not access microphone.\");\n      setRecording(false);\n    }\n  };\n\n  // âš¡ Generate code\n  const handleGenerateCode = async () => {\n    const promptToSend = manualPrompt.trim() || transcript.trim();\n\n    if (!promptToSend) return alert(\"No prompt provided\");\n\n    console.log(\"Sending prompt:\", promptToSend);\n\n    setLoadingGenerate(true);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/generate-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: promptToSend }),\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n    } catch {\n      alert(\"Error generating code.\");\n    }\n    setLoadingGenerate(false);\n  };\n\n  // ðŸ›  Compile code\n  const handleCompile = async () => {\n    if (!generatedCode.trim()) return alert(\"No code to compile\");\n    setLoadingCompile(true);\n    setCompileOutput(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          code: generatedCode,\n          inputs: compileInputs\n            ? compileInputs.split(\",\").map((i) => i.trim())\n            : [],\n        }),\n      });\n      const data = await res.json();\n      setCompileOutput(\n        data.output || data.errors || \"// No output or errors returned\"\n      );\n    } catch {\n      alert(\"Error compiling code.\");\n    }\n    setLoadingCompile(false);\n  };\n\n  // ðŸ’¾ Save code as file\n  const handleSave = () => {\n    if (!generatedCode.trim()) return alert(\"No code to save\");\n    const blob = new Blob([generatedCode], { type: \"text/plain;charset=utf-8\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    link.click();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-indigo-100 via-white to-purple-100 flex flex-col items-center\">\n      {/* Header */}\n      <header className=\"w-full text-center py-8 bg-gradient-to-r from-purple-600 to-indigo-600 text-white shadow-lg\">\n        <h1 className=\"text-4xl font-bold\">ðŸŽ™ Code with Your Voice</h1>\n        <p className=\"mt-2 text-lg opacity-90\">\n          No keyboard? No problem â€” your voice is the new IDE.\n        </p>\n      </header>\n\n      {/* Main */}\n      <div className=\"w-full max-w-5xl p-6 space-y-6\">\n        {/* Mic Button */}\n        <div className=\"flex flex-col items-center\">\n          <button\n            onClick={handleStartRecording}\n            disabled={recording}\n            className={`w-28 h-28 rounded-full flex items-center justify-center shadow-xl text-4xl transition-all focus:outline-none focus:ring-4 ${\n              recording\n                ? \"bg-red-500 animate-pulse focus:ring-red-300\"\n                : \"bg-green-500 hover:bg-green-600 focus:ring-green-300\"\n            }`}\n          >\n            {recording ? \"ðŸŽ™\" : \"ðŸŽ¤\"}\n          </button>\n          <p className=\"mt-3 text-gray-700 text-lg\">\n            {recording ? \"Listening...\" : \"Click to speak your code idea\"}\n          </p>\n        </div>\n\n        {/* Transcript + Manual Input */}\n        <div className=\"bg-white shadow rounded-lg p-4 space-y-4\">\n          <textarea\n            value={transcript}\n            onChange={(e) => setTranscript(e.target.value)}\n            placeholder=\"Transcript will appear here...\"\n            rows={2}\n            className=\"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-purple-400\"\n          />\n          <input\n            type=\"text\"\n            value={manualPrompt}\n            onChange={(e) => setManualPrompt(e.target.value)}\n            placeholder=\"Or type your prompt...\"\n            className=\"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-purple-400\"\n          />\n        </div>\n\n        {/* Generate Code */}\n        <div className=\"bg-white shadow rounded-lg p-4 space-y-4\">\n          <div className=\"flex gap-3\">\n            <LoadingButton\n              onClick={handleGenerateCode}\n              loading={loadingGenerate}\n              color=\"purple\"\n            >\n              âš¡ Generate Code\n            </LoadingButton>\n\n            <LoadingButton onClick={handleSave} loading={false} color=\"gray\">\n              ðŸ’¾ Save\n            </LoadingButton>\n          </div>\n          <pre className=\"bg-gray-900 text-green-400 p-4 rounded-lg overflow-x-auto min-h-[150px] text-sm\">\n            {generatedCode || \"// Your generated code will appear here\"}\n          </pre>\n        </div>\n\n        {/* Compile & Output */}\n        <div className=\"bg-white shadow rounded-lg p-4 space-y-4\">\n          <input\n            type=\"text\"\n            value={compileInputs}\n            onChange={(e) => setCompileInputs(e.target.value)}\n            placeholder=\"Enter inputs separated by commas\"\n            className=\"w-full border rounded p-3 text-lg focus:outline-none focus:ring-2 focus:ring-indigo-400\"\n          />\n          <LoadingButton\n            onClick={handleCompile}\n            loading={loadingCompile}\n            color=\"indigo\"\n          >\n            ðŸ›  Compile & Run\n          </LoadingButton>\n          <pre className=\"bg-black text-white p-4 rounded-lg overflow-x-auto min-h-[100px] text-sm\">\n            {compileOutput || \"// Output will appear here\"}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
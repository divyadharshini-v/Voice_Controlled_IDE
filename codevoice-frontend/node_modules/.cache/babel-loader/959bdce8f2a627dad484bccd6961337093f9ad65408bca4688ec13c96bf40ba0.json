{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\MicInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicInput = ({\n  setTranscript,\n  transcript,\n  manualPrompt,\n  setManualPrompt\n}) => {\n  _s();\n  const mediaRecorderRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const audioChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunks.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) {\n          audioChunks.current.push(e.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, {\n          type: \"audio/webm\"\n        });\n        const formData = new FormData();\n        formData.append(\"audio\", audioBlob);\n        try {\n          const response = await axios.post(\"http://localhost:5001/api/transcribe\", formData);\n          const text = response.data.transcript;\n          setTranscript(text);\n        } catch (error) {\n          console.error(\"Transcription failed:\", error);\n          alert(\"Failed to transcribe audio.\");\n        }\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Microphone access denied or not available:\", error);\n      alert(\"Microphone access denied or not available.\");\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl bg-white p-4 rounded shadow mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"\\uD83C\\uDFA4 Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"bg-red-600 text-white px-4 py-2 rounded\",\n        children: \"\\u23F9\\uFE0F Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: \"Transcript:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border rounded\",\n        rows: \"3\",\n        value: transcript,\n        readOnly: true,\n        placeholder: \"Transcript from mic will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: \"Or Enter Prompt Manually:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 border rounded\",\n        rows: \"3\",\n        value: manualPrompt,\n        onChange: e => setManualPrompt(e.target.value),\n        placeholder: \"Type your prompt if mic does not work...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MicInput, \"7iY7pSRN7ZtYExB2BBNgIUSwoi0=\");\n_c = MicInput;\nexport default MicInput;\nvar _c;\n$RefreshReg$(_c, \"MicInput\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","MicInput","setTranscript","transcript","manualPrompt","setManualPrompt","_s","mediaRecorderRef","isRecording","setIsRecording","audioChunks","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","response","post","text","error","console","alert","start","stopRecording","stop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/MicInput.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst MicInput = ({\n  setTranscript,\n  transcript,\n  manualPrompt,\n  setManualPrompt,\n}) => {\n  const mediaRecorderRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const audioChunks = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunks.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          audioChunks.current.push(e.data);\n        }\n      };\n\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/webm\" });\n        const formData = new FormData();\n        formData.append(\"audio\", audioBlob);\n\n        try {\n          const response = await axios.post(\"http://localhost:5001/api/transcribe\", formData);\n          const text = response.data.transcript;\n          setTranscript(text);\n        } catch (error) {\n          console.error(\"Transcription failed:\", error);\n          alert(\"Failed to transcribe audio.\");\n        }\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Microphone access denied or not available:\", error);\n      alert(\"Microphone access denied or not available.\");\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl bg-white p-4 rounded shadow mb-6\">\n      <div className=\"mb-4\">\n        {!isRecording ? (\n          <button\n            onClick={startRecording}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n          >\n            üé§ Start Recording\n          </button>\n        ) : (\n          <button\n            onClick={stopRecording}\n            className=\"bg-red-600 text-white px-4 py-2 rounded\"\n          >\n            ‚èπÔ∏è Stop Recording\n          </button>\n        )}\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"block font-medium mb-1\">Transcript:</label>\n        <textarea\n          className=\"w-full p-2 border rounded\"\n          rows=\"3\"\n          value={transcript}\n          readOnly\n          placeholder=\"Transcript from mic will appear here...\"\n        />\n      </div>\n\n      <div>\n        <label className=\"block font-medium mb-1\">Or Enter Prompt Manually:</label>\n        <textarea\n          className=\"w-full p-2 border rounded\"\n          rows=\"3\"\n          value={manualPrompt}\n          onChange={(e) => setManualPrompt(e.target.value)}\n          placeholder=\"Type your prompt if mic does not work...\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MicInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
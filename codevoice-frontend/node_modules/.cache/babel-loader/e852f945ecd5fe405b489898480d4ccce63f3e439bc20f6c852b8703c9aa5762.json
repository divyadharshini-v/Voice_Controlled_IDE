{"ast":null,"code":"var _jsxFileName = \"D:\\\\Voice_Controlled_IDE\\\\codevoice-frontend\\\\src\\\\MicInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicInput = ({\n  setTranscript\n}) => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    audioChunksRef.current = [];\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        audioChunksRef.current.push(event.data);\n      }\n    };\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: \"audio/webm\"\n      });\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob, \"recording.webm\");\n      try {\n        const response = await fetch(\"http://localhost:5000/api/transcribe\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await response.json();\n        setTranscript(data.transcript);\n      } catch (err) {\n        console.error(\"Transcription failed:\", err);\n      }\n    };\n    mediaRecorder.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `px-4 py-2 rounded ${recording ? \"bg-red-500\" : \"bg-green-500\"} text-white`,\n      onClick: recording ? stopRecording : startRecording,\n      children: recording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MicInput, \"iihCjkzL20K33vHj1iywA3a+uCE=\");\n_c = MicInput;\nexport default MicInput;\nvar _c;\n$RefreshReg$(_c, \"MicInput\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","MicInput","setTranscript","_s","recording","setRecording","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","response","fetch","method","body","json","transcript","err","console","error","start","stopRecording","stop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Voice_Controlled_IDE/codevoice-frontend/src/MicInput.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst MicInput = ({ setTranscript }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    audioChunksRef.current = [];\r\n\r\n    mediaRecorder.ondataavailable = (event) => {\r\n      if (event.data.size > 0) {\r\n        audioChunksRef.current.push(event.data);\r\n      }\r\n    };\r\n\r\n    mediaRecorder.onstop = async () => {\r\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\r\n      const formData = new FormData();\r\n      formData.append(\"audio\", audioBlob, \"recording.webm\");\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/transcribe\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        const data = await response.json();\r\n        setTranscript(data.transcript);\r\n      } catch (err) {\r\n        console.error(\"Transcription failed:\", err);\r\n      }\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <button\r\n        className={`px-4 py-2 rounded ${recording ? \"bg-red-500\" : \"bg-green-500\"} text-white`}\r\n        onClick={recording ? stopRecording : startRecording}\r\n      >\r\n        {recording ? \"Stop Recording\" : \"Start Recording\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMS,cAAc,GAAGT,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC/CH,gBAAgB,CAACU,OAAO,GAAGF,aAAa;IACxCP,cAAc,CAACS,OAAO,GAAG,EAAE;IAE3BF,aAAa,CAACG,eAAe,GAAIC,KAAK,IAAK;MACzC,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;QACvBb,cAAc,CAACS,OAAO,CAACK,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;MACzC;IACF,CAAC;IAEDL,aAAa,CAACQ,MAAM,GAAG,YAAY;MACjC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACjB,cAAc,CAACS,OAAO,EAAE;QAAES,IAAI,EAAE;MAAa,CAAC,CAAC;MAC1E,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,SAAS,EAAE,gBAAgB,CAAC;MAErD,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,MAAMP,IAAI,GAAG,MAAMU,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC/B,aAAa,CAACiB,IAAI,CAACe,UAAU,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C;IACF,CAAC;IAEDrB,aAAa,CAACwB,KAAK,CAAC,CAAC;IACrBjC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMkC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIjC,gBAAgB,CAACU,OAAO,EAAE;MAC5BV,gBAAgB,CAACU,OAAO,CAACwB,IAAI,CAAC,CAAC;MAC/BnC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKyC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnB1C,OAAA;MACEyC,SAAS,EAAE,qBAAqBrC,SAAS,GAAG,YAAY,GAAG,cAAc,aAAc;MACvFuC,OAAO,EAAEvC,SAAS,GAAGmC,aAAa,GAAG/B,cAAe;MAAAkC,QAAA,EAEnDtC,SAAS,GAAG,gBAAgB,GAAG;IAAiB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAxDIF,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
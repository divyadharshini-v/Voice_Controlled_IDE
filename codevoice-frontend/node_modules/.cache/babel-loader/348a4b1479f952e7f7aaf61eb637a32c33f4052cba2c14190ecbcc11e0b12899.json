{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\n// src/VoiceControl.jsx\nimport React, { useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceControl = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  // Passive listening on mount\n  useEffect(() => {\n    if (browserSupportsSpeechRecognition) {\n      SpeechRecognition.startListening({\n        continuous: false,\n        language: 'en-US'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const cleanedTranscript = transcript.toLowerCase().trim();\n    if (cleanedTranscript.includes(\"start recording\") && !listening) {\n      console.log(\"Voice command detected: Starting continuous recording...\");\n      resetTranscript(); // clear the trigger phrase\n      SpeechRecognition.startListening({\n        continuous: true,\n        language: 'en-US'\n      });\n    }\n  }, [transcript, listening]);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voice Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), \" \", listening ? \"Recording...\" : \"Passive listening for 'start recording'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"You said:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }, this), \" \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"VOdoumcatCobm1LeycFaky4KkQ0=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","VoiceControl","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","language","cleanedTranscript","toLowerCase","trim","includes","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["// src/VoiceControl.jsx\r\nimport React, { useEffect } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\n\r\nconst VoiceControl = () => {\r\n  const { transcript, listening, resetTranscript, browserSupportsSpeechRecognition } = useSpeechRecognition();\r\n\r\n  // Passive listening on mount\r\n  useEffect(() => {\r\n    if (browserSupportsSpeechRecognition) {\r\n      SpeechRecognition.startListening({ continuous: false, language: 'en-US' });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const cleanedTranscript = transcript.toLowerCase().trim();\r\n    \r\n    if (cleanedTranscript.includes(\"start recording\") && !listening) {\r\n      console.log(\"Voice command detected: Starting continuous recording...\");\r\n      resetTranscript(); // clear the trigger phrase\r\n      SpeechRecognition.startListening({ continuous: true, language: 'en-US' });\r\n    }\r\n  }, [transcript, listening]);\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <p>Your browser does not support speech recognition.</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\", fontFamily: \"sans-serif\" }}>\r\n      <h2>Voice Control</h2>\r\n      <p><strong>Status:</strong> {listening ? \"Recording...\" : \"Passive listening for 'start recording'\"}</p>\r\n      <p><strong>You said:</strong> {transcript}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC,eAAe;IAAEC;EAAiC,CAAC,GAAGR,oBAAoB,CAAC,CAAC;;EAE3G;EACAF,SAAS,CAAC,MAAM;IACd,IAAIU,gCAAgC,EAAE;MACpCT,iBAAiB,CAACU,cAAc,CAAC;QAAEC,UAAU,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAQ,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,MAAMc,iBAAiB,GAAGP,UAAU,CAACQ,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAEzD,IAAIF,iBAAiB,CAACG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAACT,SAAS,EAAE;MAC/DU,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;MACvEV,eAAe,CAAC,CAAC,CAAC,CAAC;MACnBR,iBAAiB,CAACU,cAAc,CAAC;QAAEC,UAAU,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAQ,CAAC,CAAC;IAC3E;EACF,CAAC,EAAE,CAACN,UAAU,EAAEC,SAAS,CAAC,CAAC;EAE3B,IAAI,CAACE,gCAAgC,EAAE;IACrC,oBAAON,OAAA;MAAAgB,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjE;EAEA,oBACEpB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAa,CAAE;IAAAP,QAAA,gBACxDhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,gBAAGhB,OAAA;QAAAgB,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAChB,SAAS,GAAG,cAAc,GAAG,yCAAyC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxGpB,OAAA;MAAAgB,QAAA,gBAAGhB,OAAA;QAAAgB,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,UAAU;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,YAAY;EAAA,QACqEH,oBAAoB;AAAA;AAAA0B,EAAA,GADrGvB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
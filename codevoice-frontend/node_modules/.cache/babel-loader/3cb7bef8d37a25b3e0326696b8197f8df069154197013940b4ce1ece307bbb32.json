{"ast":null,"code":"var _jsxFileName = \"D:\\\\codevoice\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\n// src/VoiceControl.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceControl = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  let recognition;\n  if (SpeechRecognition) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.lang = \"en-US\";\n  }\n  const handleCommand = text => {\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes(\"start recording\")) {\n      setIsRecording(true);\n      console.log(\"üé§ Voice Command: Start Recording\");\n    } else if (lowerText.includes(\"stop recording\")) {\n      setIsRecording(false);\n      console.log(\"üõë Voice Command: Stop Recording\");\n    }\n  };\n  const startListening = () => {\n    if (!SpeechRecognition) {\n      alert(\"Your browser does not support Speech Recognition.\");\n      return;\n    }\n    recognition.start();\n    setListening(true);\n    recognition.onresult = event => {\n      const currentTranscript = event.results[event.results.length - 1][0].transcript;\n      console.log(\"Heard:\", currentTranscript);\n      setTranscript(currentTranscript);\n      handleCommand(currentTranscript);\n    };\n    recognition.onend = () => {\n      console.log(\"Recognition ended. Restarting...\");\n      recognition.start(); // Keeps it listening continuously\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n  };\n  const stopListening = () => {\n    if (recognition) {\n      recognition.stop();\n      setListening(false);\n    }\n  };\n  useEffect(() => {\n    // Start listening immediately when component mounts\n    startListening();\n\n    // Stop on unmount\n    return () => stopListening();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF99\\uFE0F Voice-Controlled Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Command: \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Recording Status: \", isRecording ? \"Recording...\" : \"Not Recording\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: listening ? stopListening : startListening,\n      children: listening ? \"Stop Listening\" : \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"SO4R0oVBmqz7timfpZQCXMDwQn4=\");\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VoiceControl","_s","isRecording","setIsRecording","transcript","setTranscript","listening","setListening","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","lang","handleCommand","text","lowerText","toLowerCase","includes","console","log","startListening","alert","start","onresult","event","currentTranscript","results","length","onend","onerror","error","stopListening","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/codevoice/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["// src/VoiceControl.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst VoiceControl = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [listening, setListening] = useState(false);\r\n\r\n  const SpeechRecognition =\r\n    window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n  let recognition;\r\n\r\n  if (SpeechRecognition) {\r\n    recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.lang = \"en-US\";\r\n  }\r\n\r\n  const handleCommand = (text) => {\r\n    const lowerText = text.toLowerCase();\r\n    if (lowerText.includes(\"start recording\")) {\r\n      setIsRecording(true);\r\n      console.log(\"üé§ Voice Command: Start Recording\");\r\n    } else if (lowerText.includes(\"stop recording\")) {\r\n      setIsRecording(false);\r\n      console.log(\"üõë Voice Command: Stop Recording\");\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    if (!SpeechRecognition) {\r\n      alert(\"Your browser does not support Speech Recognition.\");\r\n      return;\r\n    }\r\n\r\n    recognition.start();\r\n    setListening(true);\r\n\r\n    recognition.onresult = (event) => {\r\n      const currentTranscript =\r\n        event.results[event.results.length - 1][0].transcript;\r\n      console.log(\"Heard:\", currentTranscript);\r\n      setTranscript(currentTranscript);\r\n      handleCommand(currentTranscript);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      console.log(\"Recognition ended. Restarting...\");\r\n      recognition.start(); // Keeps it listening continuously\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error:\", event.error);\r\n    };\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognition) {\r\n      recognition.stop();\r\n      setListening(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Start listening immediately when component mounts\r\n    startListening();\r\n\r\n    // Stop on unmount\r\n    return () => stopListening();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>üéôÔ∏è Voice-Controlled Recording</h2>\r\n      <p>Current Command: {transcript}</p>\r\n      <p>Recording Status: {isRecording ? \"Recording...\" : \"Not Recording\"}</p>\r\n      <button onClick={listening ? stopListening : startListening}>\r\n        {listening ? \"Stop Listening\" : \"Start Listening\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
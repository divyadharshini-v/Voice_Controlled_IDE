{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // ðŸŽ¤ Automatically start recording on page load\n  useEffect(() => {\n    startRecording();\n    // Clean up mic when component unmounts\n    return () => {\n      var _mediaRecorderRef$cur, _mediaRecorderRef$cur2;\n      (_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : (_mediaRecorderRef$cur2 = _mediaRecorderRef$cur.stream) === null || _mediaRecorderRef$cur2 === void 0 ? void 0 : _mediaRecorderRef$cur2.getTracks().forEach(track => track.stop());\n    };\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n\n      // Auto stop every 5 seconds and restart for continuous transcription\n      mediaRecorderRef.current.onstop = handleStopRecording;\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setStatus(\"Listening for your command...\");\n\n      // Stop recording after a few seconds and restart to avoid giant blobs\n      setInterval(() => {\n        var _mediaRecorderRef$cur3;\n        if (((_mediaRecorderRef$cur3 = mediaRecorderRef.current) === null || _mediaRecorderRef$cur3 === void 0 ? void 0 : _mediaRecorderRef$cur3.state) === \"recording\") {\n          mediaRecorderRef.current.stop();\n        }\n      }, 5000);\n    } catch (err) {\n      console.error(\"Microphone error:\", err);\n      setStatus(\"Microphone access denied.\");\n    }\n  };\n  const handleStopRecording = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    audioChunksRef.current = [];\n    await sendAudioToBackend(audioBlob);\n\n    // Restart recording for continuous listening\n    startRecording();\n  };\n  const sendAudioToBackend = async audioBlob => {\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob, \"recording.wav\");\n    try {\n      var _data$text, _data$text2, _data$text3;\n      const res = await fetch(\"/api/transcribe\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n\n      // Append new text to transcript (and allow editing)\n      if (data.text) {\n        setTranscript(prev => prev + \" \" + data.text);\n      }\n      setStatus(\"Transcription updated\");\n\n      // Auto-trigger commands\n      if ((_data$text = data.text) !== null && _data$text !== void 0 && _data$text.toLowerCase().includes(\"generate\")) {\n        generateCode(data.text);\n      } else if ((_data$text2 = data.text) !== null && _data$text2 !== void 0 && _data$text2.toLowerCase().includes(\"compile\")) {\n        compileCode();\n      } else if ((_data$text3 = data.text) !== null && _data$text3 !== void 0 && _data$text3.toLowerCase().includes(\"save\")) {\n        saveCode();\n      }\n    } catch (err) {\n      console.error(\"Transcription error:\", err);\n      setStatus(\"Error during transcription.\");\n    }\n  };\n  const generateCode = async (prompt = transcript) => {\n    setStatus(\"Generating code...\");\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await res.json();\n      setCode(data.code || \"\");\n      setStatus(\"Code generated successfully\");\n    } catch (err) {\n      console.error(\"Code generation error:\", err);\n      setStatus(\"Error generating code.\");\n    }\n  };\n  const compileCode = async () => {\n    setStatus(\"Compiling code...\");\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await res.json();\n      alert(`Compilation Output:\\n${data.output}`);\n      setStatus(\"Compilation complete\");\n    } catch (err) {\n      console.error(\"Compilation error:\", err);\n      setStatus(\"Error compiling code.\");\n    }\n  };\n  const saveCode = () => {\n    const blob = new Blob([code], {\n      type: \"text/plain\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    setStatus(\"Code saved locally\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white flex flex-col items-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"\\uD83C\\uDFA4 CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6 text-gray-300\",\n      children: status || \"Ready for your command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      placeholder: \"Your transcript or manual prompt...\",\n      className: \"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-white border border-gray-700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: e => setCode(e.target.value),\n      placeholder: \"Generated code will appear here...\",\n      className: \"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-green-400 font-mono border border-gray-700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateCode(),\n        className: \"px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg\",\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: compileCode,\n        className: \"px-6 py-3 bg-yellow-600 hover:bg-yellow-700 rounded-lg\",\n        children: \"Compile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCode,\n        className: \"px-6 py-3 bg-purple-600 hover:bg-purple-700 rounded-lg\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BEgR9tDxuCE/i7Vb2NKR7aeVnkA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","code","setCode","status","setStatus","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","startRecording","_mediaRecorderRef$cur","_mediaRecorderRef$cur2","current","stream","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","event","data","size","push","onstop","handleStopRecording","start","setInterval","_mediaRecorderRef$cur3","state","err","console","error","audioBlob","Blob","type","sendAudioToBackend","formData","FormData","append","_data$text","_data$text2","_data$text3","res","fetch","method","body","json","text","prev","toLowerCase","includes","generateCode","compileCode","saveCode","prompt","headers","JSON","stringify","alert","output","blob","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nexport default function App() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // ðŸŽ¤ Automatically start recording on page load\n  useEffect(() => {\n    startRecording();\n    // Clean up mic when component unmounts\n    return () => {\n      mediaRecorderRef.current?.stream?.getTracks().forEach(track => track.stop());\n    };\n  }, []);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n\n      // Auto stop every 5 seconds and restart for continuous transcription\n      mediaRecorderRef.current.onstop = handleStopRecording;\n      mediaRecorderRef.current.start();\n\n      setIsRecording(true);\n      setStatus(\"Listening for your command...\");\n\n      // Stop recording after a few seconds and restart to avoid giant blobs\n      setInterval(() => {\n        if (mediaRecorderRef.current?.state === \"recording\") {\n          mediaRecorderRef.current.stop();\n        }\n      }, 5000);\n\n    } catch (err) {\n      console.error(\"Microphone error:\", err);\n      setStatus(\"Microphone access denied.\");\n    }\n  };\n\n  const handleStopRecording = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n    audioChunksRef.current = [];\n    await sendAudioToBackend(audioBlob);\n\n    // Restart recording for continuous listening\n    startRecording();\n  };\n\n  const sendAudioToBackend = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob, \"recording.wav\");\n\n    try {\n      const res = await fetch(\"/api/transcribe\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await res.json();\n\n      // Append new text to transcript (and allow editing)\n      if (data.text) {\n        setTranscript(prev => prev + \" \" + data.text);\n      }\n      setStatus(\"Transcription updated\");\n\n      // Auto-trigger commands\n      if (data.text?.toLowerCase().includes(\"generate\")) {\n        generateCode(data.text);\n      } else if (data.text?.toLowerCase().includes(\"compile\")) {\n        compileCode();\n      } else if (data.text?.toLowerCase().includes(\"save\")) {\n        saveCode();\n      }\n    } catch (err) {\n      console.error(\"Transcription error:\", err);\n      setStatus(\"Error during transcription.\");\n    }\n  };\n\n  const generateCode = async (prompt = transcript) => {\n    setStatus(\"Generating code...\");\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt }),\n      });\n      const data = await res.json();\n      setCode(data.code || \"\");\n      setStatus(\"Code generated successfully\");\n    } catch (err) {\n      console.error(\"Code generation error:\", err);\n      setStatus(\"Error generating code.\");\n    }\n  };\n\n  const compileCode = async () => {\n    setStatus(\"Compiling code...\");\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code }),\n      });\n      const data = await res.json();\n      alert(`Compilation Output:\\n${data.output}`);\n      setStatus(\"Compilation complete\");\n    } catch (err) {\n      console.error(\"Compilation error:\", err);\n      setStatus(\"Error compiling code.\");\n    }\n  };\n\n  const saveCode = () => {\n    const blob = new Blob([code], { type: \"text/plain\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    setStatus(\"Code saved locally\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white flex flex-col items-center p-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">ðŸŽ¤ CodeVoice</h1>\n      <p className=\"mb-6 text-gray-300\">{status || \"Ready for your command\"}</p>\n\n      {/* Transcript Box */}\n      <textarea\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        placeholder=\"Your transcript or manual prompt...\"\n        className=\"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-white border border-gray-700\"\n      />\n\n      {/* Code Box */}\n      <textarea\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Generated code will appear here...\"\n        className=\"w-full max-w-2xl p-4 mb-4 bg-gray-800 rounded-lg text-green-400 font-mono border border-gray-700\"\n      />\n\n      {/* Actions */}\n      <div className=\"flex gap-4\">\n        <button\n          onClick={() => generateCode()}\n          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg\"\n        >\n          Generate Code\n        </button>\n        <button\n          onClick={compileCode}\n          className=\"px-6 py-3 bg-yellow-600 hover:bg-yellow-700 rounded-lg\"\n        >\n          Compile\n        </button>\n        <button\n          onClick={saveCode}\n          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 rounded-lg\"\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\VoiceControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceControl({\n  onCommand\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Auto-start recording on mount\n  useEffect(() => {\n    startRecording();\n    return () => stopRecording(); // cleanup\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) audioChunksRef.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = handleStop;\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error(\"Microphone access denied:\", err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const handleStop = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    audioChunksRef.current = [];\n\n    // Send to backend for Whisper transcription\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob);\n    const res = await fetch(\"/api/transcribe\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setTranscript(data.text || \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-lg font-semibold mb-2\",\n      children: \"Your Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border rounded\",\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onCommand(transcript),\n      className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Run Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceControl, \"tcSM/CCdbqYgTYJSXm+XBe39PhM=\");\n_c = VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","VoiceControl","onCommand","_s","isRecording","setIsRecording","transcript","setTranscript","mediaRecorderRef","audioChunksRef","startRecording","stopRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","data","size","push","onstop","handleStop","start","err","console","error","stop","audioBlob","Blob","type","formData","FormData","append","res","fetch","method","body","json","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","rows","onClick","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/VoiceControl.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nexport default function VoiceControl({ onCommand }) {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // Auto-start recording on mount\n  useEffect(() => {\n    startRecording();\n    return () => stopRecording(); // cleanup\n  }, []);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = (e) => {\n        if (e.data.size > 0) audioChunksRef.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = handleStop;\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error(\"Microphone access denied:\", err);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const handleStop = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n    audioChunksRef.current = [];\n\n    // Send to backend for Whisper transcription\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob);\n    const res = await fetch(\"/api/transcribe\", { method: \"POST\", body: formData });\n    const data = await res.json();\n    setTranscript(data.text || \"\");\n  };\n\n  return (\n    <div className=\"w-full\">\n      <label className=\"block text-lg font-semibold mb-2\">Your Command</label>\n      <textarea\n        className=\"w-full p-2 border rounded\"\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        rows=\"3\"\n      />\n      <button\n        onClick={() => onCommand(transcript)}\n        className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded\"\n      >\n        Run Command\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
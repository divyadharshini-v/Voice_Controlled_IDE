{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice_Controlled_IDE-Agent\\\\codevoice-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Transcript state is editable\n  const [transcript, setTranscript] = useState(\"\");\n  // Manual prompt is removed to simplify; we just use transcript as prompt\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  // Generate code from backend using transcript as prompt\n  const handleGenerateCode = async () => {\n    if (!transcript.trim()) {\n      alert(\"Please enter or speak your prompt first.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: transcript\n        })\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n      setOutput(\"\"); // Clear previous output on new generation\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n      alert(\"Failed to generate code.\");\n    }\n  };\n\n  // Compile Python code\n  const handleCompile = async () => {\n    if (!generatedCode.trim()) {\n      alert(\"No code to compile. Please generate or enter code first.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: generatedCode\n        })\n      });\n      const data = await res.json();\n      setOutput(data.output || data.error || \"\");\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n      alert(\"Failed to compile code.\");\n    }\n  };\n\n  // Save code as file\n  const handleSave = () => {\n    if (!generatedCode.trim()) {\n      alert(\"No code to save.\");\n      return;\n    }\n    const blob = new Blob([generatedCode], {\n      type: \"text/plain\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-blue-600 mb-6\",\n      children: \"CodeVoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicInput, {\n      onTranscriptionComplete: setTranscript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      onChange: e => setTranscript(e.target.value),\n      placeholder: \"Transcript will appear here... You can edit or type your prompt.\",\n      className: \"w-full max-w-2xl h-24 p-3 border rounded mb-4 resize-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateCode,\n        className: \"bg-green-500 text-white px-4 py-2 rounded\",\n        children: \"Generate Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompile,\n        className: \"bg-yellow-500 text-white px-4 py-2 rounded\",\n        children: \"Compile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      code: generatedCode,\n      setCode: setGeneratedCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 w-full max-w-2xl bg-white p-4 rounded shadow whitespace-pre-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-2\",\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VoiceControl, {\n      onCommand: command => {\n        if (command === \"generate\") handleGenerateCode();\n        if (command === \"compile\") handleCompile();\n        if (command === \"save\") handleSave();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OmOKl8HmLgbgn1JEusiX/vaL9BQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MicInput","CodeEditor","VoiceControl","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","generatedCode","setGeneratedCode","output","setOutput","handleGenerateCode","trim","alert","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","code","err","console","error","handleCompile","handleSave","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTranscriptionComplete","value","onChange","e","target","placeholder","onClick","setCode","onCommand","command","_c","$RefreshReg$"],"sources":["E:/Voice_Controlled_IDE-Agent/codevoice-frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState } from \"react\";\nimport MicInput from \"./MicInput\";\nimport CodeEditor from \"./CodeEditor\";\nimport VoiceControl from \"./VoiceControl\";\n\nexport default function App() {\n  // Transcript state is editable\n  const [transcript, setTranscript] = useState(\"\");\n  // Manual prompt is removed to simplify; we just use transcript as prompt\n  const [generatedCode, setGeneratedCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  // Generate code from backend using transcript as prompt\n  const handleGenerateCode = async () => {\n    if (!transcript.trim()) {\n      alert(\"Please enter or speak your prompt first.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/generate-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: transcript }),\n      });\n      const data = await res.json();\n      setGeneratedCode(data.code || \"\");\n      setOutput(\"\"); // Clear previous output on new generation\n    } catch (err) {\n      console.error(\"Error generating code:\", err);\n      alert(\"Failed to generate code.\");\n    }\n  };\n\n  // Compile Python code\n  const handleCompile = async () => {\n    if (!generatedCode.trim()) {\n      alert(\"No code to compile. Please generate or enter code first.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/compile\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ code: generatedCode }),\n      });\n      const data = await res.json();\n      setOutput(data.output || data.error || \"\");\n    } catch (err) {\n      console.error(\"Error compiling code:\", err);\n      alert(\"Failed to compile code.\");\n    }\n  };\n\n  // Save code as file\n  const handleSave = () => {\n    if (!generatedCode.trim()) {\n      alert(\"No code to save.\");\n      return;\n    }\n    const blob = new Blob([generatedCode], { type: \"text/plain\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"code.py\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6 flex flex-col items-center\">\n      {/* Title */}\n      <h1 className=\"text-4xl font-bold text-blue-600 mb-6\">CodeVoice</h1>\n\n      {/* Mic Input */}\n      <MicInput onTranscriptionComplete={setTranscript} />\n\n      {/* Editable Transcript Box */}\n      <textarea\n        value={transcript}\n        onChange={(e) => setTranscript(e.target.value)}\n        placeholder=\"Transcript will appear here... You can edit or type your prompt.\"\n        className=\"w-full max-w-2xl h-24 p-3 border rounded mb-4 resize-none\"\n      />\n\n      {/* Buttons */}\n      <div className=\"flex gap-4 mb-6\">\n        <button\n          onClick={handleGenerateCode}\n          className=\"bg-green-500 text-white px-4 py-2 rounded\"\n        >\n          Generate Code\n        </button>\n        <button\n          onClick={handleCompile}\n          className=\"bg-yellow-500 text-white px-4 py-2 rounded\"\n        >\n          Compile\n        </button>\n        <button\n          onClick={handleSave}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Save\n        </button>\n      </div>\n\n      {/* Code Editor */}\n      <CodeEditor code={generatedCode} setCode={setGeneratedCode} />\n\n      {/* Output below code editor */}\n      {output && (\n        <div className=\"mt-6 w-full max-w-2xl bg-white p-4 rounded shadow whitespace-pre-wrap\">\n          <h2 className=\"font-bold mb-2\">Output:</h2>\n          <pre>{output}</pre>\n        </div>\n      )}\n\n      {/* Voice Control */}\n      <VoiceControl\n        onCommand={(command) => {\n          if (command === \"generate\") handleGenerateCode();\n          if (command === \"compile\") handleCompile();\n          if (command === \"save\") handleSave();\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}